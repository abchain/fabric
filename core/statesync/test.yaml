###############################################################################
#
#    Peer section
#
###############################################################################
peer:
    # Path on the file system where peer will store data
    fileSystemPath: /var/hyperledger/test/ledger_test

logging:

  # Default logging levels are specified here for each of the three peer
  # commands 'node', 'network' and 'chaincode'. For commands that have
  # subcommands, the defaults also apply to all subcommands of the command.
  # Valid logging levels are case-insensitive strings chosen from

  #     CRITICAL | ERROR | WARNING | NOTICE | INFO | DEBUG

  # The logging levels specified here can be overridden in various ways,
  # listed below from strongest to weakest:
  #
  # 1. The --logging-level=<level> command line option overrides all other
  #    specifications.
  #
  # 2. The environment variable CORE_LOGGING_LEVEL otherwise applies to
  #    all peer commands if defined as a non-empty string.
  #
  # 3. The environment variables CORE_LOGGING_[NODE|NETWORK|CHAINCODE]
  #    otherwise apply to the respective peer commands if defined as non-empty
  #    strings.
  #
  # 4. Otherwise, the specifications below apply.
  #
  # Developers: Please see fabric/docs/Setup/logging-control.md for more
  # options.
  level: debug
  client: debug
  statesync: debug
  peer:      debug
  node:      debug
  network:   debug
  chaincode: debug
  version:   warning
  output:
    file: "test.log"
    postfix: false

ledger:

  state:

    # Control the number state deltas that are maintained. This takes additional
    # disk space, but allow the state to be rolled backwards and forwards
    # without the need to replay transactions.
    deltaHistorySize: 500000
