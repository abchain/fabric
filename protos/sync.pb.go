// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sync.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SyncMsg_Type int32

const (
	SyncMsg_UNDEFINED     SyncMsg_Type = 0
	SyncMsg_CLIENT_SIMPLE SyncMsg_Type = 1
	//when request, its correlationId incidate the id of
	//session, which must be unique to any other simple request
	//or sessions it has requested for (no matter accepted or not)
	SyncMsg_CLIENT_SESSION_OPEN SyncMsg_Type = 2
	SyncMsg_CLIENT_SESSION      SyncMsg_Type = 3
	//client using this message for acking a message from
	//server's current session, it may piggyback next request
	//in this message sever should always handle the newest request
	//and drop the task it received before
	//the fields of session and ack may both exist
	//client MUST prepare for receiving unexpected data package from previous
	//request because they may have been in wired before new request
	//is delivered
	SyncMsg_CLIENT_SESSION_ACK   SyncMsg_Type = 4
	SyncMsg_CLIENT_SESSION_CLOSE SyncMsg_Type = 5
	//err can be sent at any time, the correlationId incidate
	//its corresponding request or session
	SyncMsg_SERVER_ERROR          SyncMsg_Type = 9
	SyncMsg_SERVER_SIMPLE         SyncMsg_Type = 10
	SyncMsg_SERVER_SESSION_ACCEPT SyncMsg_Type = 11
	SyncMsg_SERVER_SESSION        SyncMsg_Type = 12
	SyncMsg_SERVER_SESSION_ERROR  SyncMsg_Type = 13
)

var SyncMsg_Type_name = map[int32]string{
	0:  "UNDEFINED",
	1:  "CLIENT_SIMPLE",
	2:  "CLIENT_SESSION_OPEN",
	3:  "CLIENT_SESSION",
	4:  "CLIENT_SESSION_ACK",
	5:  "CLIENT_SESSION_CLOSE",
	9:  "SERVER_ERROR",
	10: "SERVER_SIMPLE",
	11: "SERVER_SESSION_ACCEPT",
	12: "SERVER_SESSION",
	13: "SERVER_SESSION_ERROR",
}

var SyncMsg_Type_value = map[string]int32{
	"UNDEFINED":             0,
	"CLIENT_SIMPLE":         1,
	"CLIENT_SESSION_OPEN":   2,
	"CLIENT_SESSION":        3,
	"CLIENT_SESSION_ACK":    4,
	"CLIENT_SESSION_CLOSE":  5,
	"SERVER_ERROR":          9,
	"SERVER_SIMPLE":         10,
	"SERVER_SESSION_ACCEPT": 11,
	"SERVER_SESSION":        12,
	"SERVER_SESSION_ERROR":  13,
}

func (x SyncMsg_Type) String() string {
	return proto.EnumName(SyncMsg_Type_name, int32(x))
}

func (SyncMsg_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{23, 0}
}

//simple syncing req/resp, the resp should have the same correlationId with
//the incoming
type SimpleReq struct {
	// Types that are valid to be assigned to Req:
	//	*SimpleReq_Tx
	//	*SimpleReq_State
	Req                  isSimpleReq_Req `protobuf_oneof:"req"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SimpleReq) Reset()         { *m = SimpleReq{} }
func (m *SimpleReq) String() string { return proto.CompactTextString(m) }
func (*SimpleReq) ProtoMessage()    {}
func (*SimpleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{0}
}

func (m *SimpleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleReq.Unmarshal(m, b)
}
func (m *SimpleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleReq.Marshal(b, m, deterministic)
}
func (m *SimpleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleReq.Merge(m, src)
}
func (m *SimpleReq) XXX_Size() int {
	return xxx_messageInfo_SimpleReq.Size(m)
}
func (m *SimpleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleReq.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleReq proto.InternalMessageInfo

type isSimpleReq_Req interface {
	isSimpleReq_Req()
}

type SimpleReq_Tx struct {
	Tx *TxQuery `protobuf:"bytes,1,opt,name=tx,proto3,oneof"`
}

type SimpleReq_State struct {
	State *LedgerState `protobuf:"bytes,2,opt,name=state,proto3,oneof"`
}

func (*SimpleReq_Tx) isSimpleReq_Req() {}

func (*SimpleReq_State) isSimpleReq_Req() {}

func (m *SimpleReq) GetReq() isSimpleReq_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (m *SimpleReq) GetTx() *TxQuery {
	if x, ok := m.GetReq().(*SimpleReq_Tx); ok {
		return x.Tx
	}
	return nil
}

func (m *SimpleReq) GetState() *LedgerState {
	if x, ok := m.GetReq().(*SimpleReq_State); ok {
		return x.State
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SimpleReq) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SimpleReq_OneofMarshaler, _SimpleReq_OneofUnmarshaler, _SimpleReq_OneofSizer, []interface{}{
		(*SimpleReq_Tx)(nil),
		(*SimpleReq_State)(nil),
	}
}

func _SimpleReq_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SimpleReq)
	// req
	switch x := m.Req.(type) {
	case *SimpleReq_Tx:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tx); err != nil {
			return err
		}
	case *SimpleReq_State:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.State); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SimpleReq.Req has unexpected type %T", x)
	}
	return nil
}

func _SimpleReq_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SimpleReq)
	switch tag {
	case 1: // req.tx
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TxQuery)
		err := b.DecodeMessage(msg)
		m.Req = &SimpleReq_Tx{msg}
		return true, err
	case 2: // req.state
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LedgerState)
		err := b.DecodeMessage(msg)
		m.Req = &SimpleReq_State{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SimpleReq_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SimpleReq)
	// req
	switch x := m.Req.(type) {
	case *SimpleReq_Tx:
		s := proto.Size(x.Tx)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SimpleReq_State:
		s := proto.Size(x.State)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SimpleResp struct {
	// Types that are valid to be assigned to Resp:
	//	*SimpleResp_State
	//	*SimpleResp_Tx
	Resp                 isSimpleResp_Resp `protobuf_oneof:"resp"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SimpleResp) Reset()         { *m = SimpleResp{} }
func (m *SimpleResp) String() string { return proto.CompactTextString(m) }
func (*SimpleResp) ProtoMessage()    {}
func (*SimpleResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{1}
}

func (m *SimpleResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleResp.Unmarshal(m, b)
}
func (m *SimpleResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleResp.Marshal(b, m, deterministic)
}
func (m *SimpleResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleResp.Merge(m, src)
}
func (m *SimpleResp) XXX_Size() int {
	return xxx_messageInfo_SimpleResp.Size(m)
}
func (m *SimpleResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleResp.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleResp proto.InternalMessageInfo

type isSimpleResp_Resp interface {
	isSimpleResp_Resp()
}

type SimpleResp_State struct {
	State *LedgerState `protobuf:"bytes,1,opt,name=state,proto3,oneof"`
}

type SimpleResp_Tx struct {
	Tx *TransactionBlock `protobuf:"bytes,2,opt,name=tx,proto3,oneof"`
}

func (*SimpleResp_State) isSimpleResp_Resp() {}

func (*SimpleResp_Tx) isSimpleResp_Resp() {}

func (m *SimpleResp) GetResp() isSimpleResp_Resp {
	if m != nil {
		return m.Resp
	}
	return nil
}

func (m *SimpleResp) GetState() *LedgerState {
	if x, ok := m.GetResp().(*SimpleResp_State); ok {
		return x.State
	}
	return nil
}

func (m *SimpleResp) GetTx() *TransactionBlock {
	if x, ok := m.GetResp().(*SimpleResp_Tx); ok {
		return x.Tx
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SimpleResp) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SimpleResp_OneofMarshaler, _SimpleResp_OneofUnmarshaler, _SimpleResp_OneofSizer, []interface{}{
		(*SimpleResp_State)(nil),
		(*SimpleResp_Tx)(nil),
	}
}

func _SimpleResp_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SimpleResp)
	// resp
	switch x := m.Resp.(type) {
	case *SimpleResp_State:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.State); err != nil {
			return err
		}
	case *SimpleResp_Tx:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tx); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SimpleResp.Resp has unexpected type %T", x)
	}
	return nil
}

func _SimpleResp_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SimpleResp)
	switch tag {
	case 1: // resp.state
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LedgerState)
		err := b.DecodeMessage(msg)
		m.Resp = &SimpleResp_State{msg}
		return true, err
	case 2: // resp.tx
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TransactionBlock)
		err := b.DecodeMessage(msg)
		m.Resp = &SimpleResp_Tx{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SimpleResp_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SimpleResp)
	// resp
	switch x := m.Resp.(type) {
	case *SimpleResp_State:
		s := proto.Size(x.State)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SimpleResp_Tx:
		s := proto.Size(x.Tx)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

//simple state sync via msg-pushing
type LedgerState struct {
	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	//hash of headblock, it has limited usage but we still keep it
	HeadBlock []byte `protobuf:"bytes,2,opt,name=headBlock,proto3" json:"headBlock,omitempty"`
	//states which can be synced by the peer
	States               *StateFilter `protobuf:"bytes,5,opt,name=states,proto3" json:"states,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LedgerState) Reset()         { *m = LedgerState{} }
func (m *LedgerState) String() string { return proto.CompactTextString(m) }
func (*LedgerState) ProtoMessage()    {}
func (*LedgerState) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{2}
}

func (m *LedgerState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LedgerState.Unmarshal(m, b)
}
func (m *LedgerState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LedgerState.Marshal(b, m, deterministic)
}
func (m *LedgerState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LedgerState.Merge(m, src)
}
func (m *LedgerState) XXX_Size() int {
	return xxx_messageInfo_LedgerState.Size(m)
}
func (m *LedgerState) XXX_DiscardUnknown() {
	xxx_messageInfo_LedgerState.DiscardUnknown(m)
}

var xxx_messageInfo_LedgerState proto.InternalMessageInfo

func (m *LedgerState) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *LedgerState) GetHeadBlock() []byte {
	if m != nil {
		return m.HeadBlock
	}
	return nil
}

func (m *LedgerState) GetStates() *StateFilter {
	if m != nil {
		return m.States
	}
	return nil
}

//query some transactions, and the response should be a TransactionBlock message
type TxQuery struct {
	Txid                 []string `protobuf:"bytes,1,rep,name=txid,proto3" json:"txid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxQuery) Reset()         { *m = TxQuery{} }
func (m *TxQuery) String() string { return proto.CompactTextString(m) }
func (*TxQuery) ProtoMessage()    {}
func (*TxQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{3}
}

func (m *TxQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxQuery.Unmarshal(m, b)
}
func (m *TxQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxQuery.Marshal(b, m, deterministic)
}
func (m *TxQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxQuery.Merge(m, src)
}
func (m *TxQuery) XXX_Size() int {
	return xxx_messageInfo_TxQuery.Size(m)
}
func (m *TxQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_TxQuery.DiscardUnknown(m)
}

var xxx_messageInfo_TxQuery proto.InternalMessageInfo

func (m *TxQuery) GetTxid() []string {
	if m != nil {
		return m.Txid
	}
	return nil
}

//request to open a long hold transferring
//client must specified a "open for" field
//so server can prepare for the following transfermation
//process, or simply reject it
type OpenSession struct {
	Transfer *TransferDetail `protobuf:"bytes,1,opt,name=transfer,proto3" json:"transfer,omitempty"`
	// Types that are valid to be assigned to For:
	//	*OpenSession_Query
	//	*OpenSession_Index
	//	*OpenSession_Fullstate
	//	*OpenSession_BlocksOrDelta
	For                  isOpenSession_For `protobuf_oneof:"for"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OpenSession) Reset()         { *m = OpenSession{} }
func (m *OpenSession) String() string { return proto.CompactTextString(m) }
func (*OpenSession) ProtoMessage()    {}
func (*OpenSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{4}
}

func (m *OpenSession) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenSession.Unmarshal(m, b)
}
func (m *OpenSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenSession.Marshal(b, m, deterministic)
}
func (m *OpenSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenSession.Merge(m, src)
}
func (m *OpenSession) XXX_Size() int {
	return xxx_messageInfo_OpenSession.Size(m)
}
func (m *OpenSession) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenSession.DiscardUnknown(m)
}

var xxx_messageInfo_OpenSession proto.InternalMessageInfo

func (m *OpenSession) GetTransfer() *TransferDetail {
	if m != nil {
		return m.Transfer
	}
	return nil
}

type isOpenSession_For interface {
	isOpenSession_For()
}

type OpenSession_Query struct {
	Query *empty.Empty `protobuf:"bytes,2,opt,name=query,proto3,oneof"`
}

type OpenSession_Index struct {
	Index []byte `protobuf:"bytes,3,opt,name=index,proto3,oneof"`
}

type OpenSession_Fullstate struct {
	Fullstate []byte `protobuf:"bytes,4,opt,name=fullstate,proto3,oneof"`
}

type OpenSession_BlocksOrDelta struct {
	BlocksOrDelta uint64 `protobuf:"varint,5,opt,name=blocksOrDelta,proto3,oneof"`
}

func (*OpenSession_Query) isOpenSession_For() {}

func (*OpenSession_Index) isOpenSession_For() {}

func (*OpenSession_Fullstate) isOpenSession_For() {}

func (*OpenSession_BlocksOrDelta) isOpenSession_For() {}

func (m *OpenSession) GetFor() isOpenSession_For {
	if m != nil {
		return m.For
	}
	return nil
}

func (m *OpenSession) GetQuery() *empty.Empty {
	if x, ok := m.GetFor().(*OpenSession_Query); ok {
		return x.Query
	}
	return nil
}

func (m *OpenSession) GetIndex() []byte {
	if x, ok := m.GetFor().(*OpenSession_Index); ok {
		return x.Index
	}
	return nil
}

func (m *OpenSession) GetFullstate() []byte {
	if x, ok := m.GetFor().(*OpenSession_Fullstate); ok {
		return x.Fullstate
	}
	return nil
}

func (m *OpenSession) GetBlocksOrDelta() uint64 {
	if x, ok := m.GetFor().(*OpenSession_BlocksOrDelta); ok {
		return x.BlocksOrDelta
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*OpenSession) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _OpenSession_OneofMarshaler, _OpenSession_OneofUnmarshaler, _OpenSession_OneofSizer, []interface{}{
		(*OpenSession_Query)(nil),
		(*OpenSession_Index)(nil),
		(*OpenSession_Fullstate)(nil),
		(*OpenSession_BlocksOrDelta)(nil),
	}
}

func _OpenSession_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*OpenSession)
	// for
	switch x := m.For.(type) {
	case *OpenSession_Query:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Query); err != nil {
			return err
		}
	case *OpenSession_Index:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Index)
	case *OpenSession_Fullstate:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Fullstate)
	case *OpenSession_BlocksOrDelta:
		b.EncodeVarint(5<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.BlocksOrDelta))
	case nil:
	default:
		return fmt.Errorf("OpenSession.For has unexpected type %T", x)
	}
	return nil
}

func _OpenSession_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*OpenSession)
	switch tag {
	case 2: // for.query
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(empty.Empty)
		err := b.DecodeMessage(msg)
		m.For = &OpenSession_Query{msg}
		return true, err
	case 3: // for.index
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.For = &OpenSession_Index{x}
		return true, err
	case 4: // for.fullstate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.For = &OpenSession_Fullstate{x}
		return true, err
	case 5: // for.blocksOrDelta
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.For = &OpenSession_BlocksOrDelta{x}
		return true, err
	default:
		return false, nil
	}
}

func _OpenSession_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*OpenSession)
	// for
	switch x := m.For.(type) {
	case *OpenSession_Query:
		s := proto.Size(x.Query)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OpenSession_Index:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Index)))
		n += len(x.Index)
	case *OpenSession_Fullstate:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Fullstate)))
		n += len(x.Fullstate)
	case *OpenSession_BlocksOrDelta:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.BlocksOrDelta))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

//reponse for the opensession message, more detail may be provided
//so client can prepare a better plan in transferring
type AcceptSession struct {
	States   *LedgerState    `protobuf:"bytes,1,opt,name=states,proto3" json:"states,omitempty"`
	Transfer *TransferDetail `protobuf:"bytes,2,opt,name=transfer,proto3" json:"transfer,omitempty"`
	// Types that are valid to be assigned to Detail:
	//	*AcceptSession_State
	Detail               isAcceptSession_Detail `protobuf_oneof:"detail"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AcceptSession) Reset()         { *m = AcceptSession{} }
func (m *AcceptSession) String() string { return proto.CompactTextString(m) }
func (*AcceptSession) ProtoMessage()    {}
func (*AcceptSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{5}
}

func (m *AcceptSession) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcceptSession.Unmarshal(m, b)
}
func (m *AcceptSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcceptSession.Marshal(b, m, deterministic)
}
func (m *AcceptSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcceptSession.Merge(m, src)
}
func (m *AcceptSession) XXX_Size() int {
	return xxx_messageInfo_AcceptSession.Size(m)
}
func (m *AcceptSession) XXX_DiscardUnknown() {
	xxx_messageInfo_AcceptSession.DiscardUnknown(m)
}

var xxx_messageInfo_AcceptSession proto.InternalMessageInfo

func (m *AcceptSession) GetStates() *LedgerState {
	if m != nil {
		return m.States
	}
	return nil
}

func (m *AcceptSession) GetTransfer() *TransferDetail {
	if m != nil {
		return m.Transfer
	}
	return nil
}

type isAcceptSession_Detail interface {
	isAcceptSession_Detail()
}

type AcceptSession_State struct {
	State *AcceptSession_StateStatus `protobuf:"bytes,4,opt,name=state,proto3,oneof"`
}

func (*AcceptSession_State) isAcceptSession_Detail() {}

func (m *AcceptSession) GetDetail() isAcceptSession_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *AcceptSession) GetState() *AcceptSession_StateStatus {
	if x, ok := m.GetDetail().(*AcceptSession_State); ok {
		return x.State
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AcceptSession) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AcceptSession_OneofMarshaler, _AcceptSession_OneofUnmarshaler, _AcceptSession_OneofSizer, []interface{}{
		(*AcceptSession_State)(nil),
	}
}

func _AcceptSession_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AcceptSession)
	// detail
	switch x := m.Detail.(type) {
	case *AcceptSession_State:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.State); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AcceptSession.Detail has unexpected type %T", x)
	}
	return nil
}

func _AcceptSession_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AcceptSession)
	switch tag {
	case 4: // detail.state
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AcceptSession_StateStatus)
		err := b.DecodeMessage(msg)
		m.Detail = &AcceptSession_State{msg}
		return true, err
	default:
		return false, nil
	}
}

func _AcceptSession_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AcceptSession)
	// detail
	switch x := m.Detail.(type) {
	case *AcceptSession_State:
		s := proto.Size(x.State)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type AcceptSession_StateStatus struct {
	EstimatedSize        uint64   `protobuf:"varint,1,opt,name=estimatedSize,proto3" json:"estimatedSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcceptSession_StateStatus) Reset()         { *m = AcceptSession_StateStatus{} }
func (m *AcceptSession_StateStatus) String() string { return proto.CompactTextString(m) }
func (*AcceptSession_StateStatus) ProtoMessage()    {}
func (*AcceptSession_StateStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{5, 0}
}

func (m *AcceptSession_StateStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcceptSession_StateStatus.Unmarshal(m, b)
}
func (m *AcceptSession_StateStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcceptSession_StateStatus.Marshal(b, m, deterministic)
}
func (m *AcceptSession_StateStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcceptSession_StateStatus.Merge(m, src)
}
func (m *AcceptSession_StateStatus) XXX_Size() int {
	return xxx_messageInfo_AcceptSession_StateStatus.Size(m)
}
func (m *AcceptSession_StateStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_AcceptSession_StateStatus.DiscardUnknown(m)
}

var xxx_messageInfo_AcceptSession_StateStatus proto.InternalMessageInfo

func (m *AcceptSession_StateStatus) GetEstimatedSize() uint64 {
	if m != nil {
		return m.EstimatedSize
	}
	return 0
}

type TransferDetail struct {
	MaxWindowSize        uint32   `protobuf:"varint,1,opt,name=maxWindowSize,proto3" json:"maxWindowSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferDetail) Reset()         { *m = TransferDetail{} }
func (m *TransferDetail) String() string { return proto.CompactTextString(m) }
func (*TransferDetail) ProtoMessage()    {}
func (*TransferDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{6}
}

func (m *TransferDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferDetail.Unmarshal(m, b)
}
func (m *TransferDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferDetail.Marshal(b, m, deterministic)
}
func (m *TransferDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferDetail.Merge(m, src)
}
func (m *TransferDetail) XXX_Size() int {
	return xxx_messageInfo_TransferDetail.Size(m)
}
func (m *TransferDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferDetail.DiscardUnknown(m)
}

var xxx_messageInfo_TransferDetail proto.InternalMessageInfo

func (m *TransferDetail) GetMaxWindowSize() uint32 {
	if m != nil {
		return m.MaxWindowSize
	}
	return 0
}

//can be sent by server during any time of a session
type RequestError struct {
	ErrorDetail          string   `protobuf:"bytes,1,opt,name=errorDetail,proto3" json:"errorDetail,omitempty"`
	ErrorCode            uint64   `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestError) Reset()         { *m = RequestError{} }
func (m *RequestError) String() string { return proto.CompactTextString(m) }
func (*RequestError) ProtoMessage()    {}
func (*RequestError) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{7}
}

func (m *RequestError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestError.Unmarshal(m, b)
}
func (m *RequestError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestError.Marshal(b, m, deterministic)
}
func (m *RequestError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestError.Merge(m, src)
}
func (m *RequestError) XXX_Size() int {
	return xxx_messageInfo_RequestError.Size(m)
}
func (m *RequestError) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestError.DiscardUnknown(m)
}

var xxx_messageInfo_RequestError proto.InternalMessageInfo

func (m *RequestError) GetErrorDetail() string {
	if m != nil {
		return m.ErrorDetail
	}
	return ""
}

func (m *RequestError) GetErrorCode() uint64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

//request wrap one of the request field which has been negotiated in
//handshake phase
type TransferRequest struct {
	// Types that are valid to be assigned to Req:
	//	*TransferRequest_Index
	//	*TransferRequest_Query
	//	*TransferRequest_State
	//	*TransferRequest_Block
	//	*TransferRequest_Delta
	Req                  isTransferRequest_Req `protobuf_oneof:"req"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TransferRequest) Reset()         { *m = TransferRequest{} }
func (m *TransferRequest) String() string { return proto.CompactTextString(m) }
func (*TransferRequest) ProtoMessage()    {}
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{8}
}

func (m *TransferRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferRequest.Unmarshal(m, b)
}
func (m *TransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferRequest.Marshal(b, m, deterministic)
}
func (m *TransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferRequest.Merge(m, src)
}
func (m *TransferRequest) XXX_Size() int {
	return xxx_messageInfo_TransferRequest.Size(m)
}
func (m *TransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransferRequest proto.InternalMessageInfo

type isTransferRequest_Req interface {
	isTransferRequest_Req()
}

type TransferRequest_Index struct {
	Index uint64 `protobuf:"varint,1,opt,name=index,proto3,oneof"`
}

type TransferRequest_Query struct {
	Query uint64 `protobuf:"varint,2,opt,name=query,proto3,oneof"`
}

type TransferRequest_State struct {
	State *SyncOffset `protobuf:"bytes,4,opt,name=state,proto3,oneof"`
}

type TransferRequest_Block struct {
	Block *SyncBlockRange `protobuf:"bytes,5,opt,name=block,proto3,oneof"`
}

type TransferRequest_Delta struct {
	Delta *SyncBlockRange `protobuf:"bytes,6,opt,name=delta,proto3,oneof"`
}

func (*TransferRequest_Index) isTransferRequest_Req() {}

func (*TransferRequest_Query) isTransferRequest_Req() {}

func (*TransferRequest_State) isTransferRequest_Req() {}

func (*TransferRequest_Block) isTransferRequest_Req() {}

func (*TransferRequest_Delta) isTransferRequest_Req() {}

func (m *TransferRequest) GetReq() isTransferRequest_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (m *TransferRequest) GetIndex() uint64 {
	if x, ok := m.GetReq().(*TransferRequest_Index); ok {
		return x.Index
	}
	return 0
}

func (m *TransferRequest) GetQuery() uint64 {
	if x, ok := m.GetReq().(*TransferRequest_Query); ok {
		return x.Query
	}
	return 0
}

func (m *TransferRequest) GetState() *SyncOffset {
	if x, ok := m.GetReq().(*TransferRequest_State); ok {
		return x.State
	}
	return nil
}

func (m *TransferRequest) GetBlock() *SyncBlockRange {
	if x, ok := m.GetReq().(*TransferRequest_Block); ok {
		return x.Block
	}
	return nil
}

func (m *TransferRequest) GetDelta() *SyncBlockRange {
	if x, ok := m.GetReq().(*TransferRequest_Delta); ok {
		return x.Delta
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TransferRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TransferRequest_OneofMarshaler, _TransferRequest_OneofUnmarshaler, _TransferRequest_OneofSizer, []interface{}{
		(*TransferRequest_Index)(nil),
		(*TransferRequest_Query)(nil),
		(*TransferRequest_State)(nil),
		(*TransferRequest_Block)(nil),
		(*TransferRequest_Delta)(nil),
	}
}

func _TransferRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TransferRequest)
	// req
	switch x := m.Req.(type) {
	case *TransferRequest_Index:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Index))
	case *TransferRequest_Query:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Query))
	case *TransferRequest_State:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.State); err != nil {
			return err
		}
	case *TransferRequest_Block:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Block); err != nil {
			return err
		}
	case *TransferRequest_Delta:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Delta); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TransferRequest.Req has unexpected type %T", x)
	}
	return nil
}

func _TransferRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TransferRequest)
	switch tag {
	case 1: // req.index
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Req = &TransferRequest_Index{x}
		return true, err
	case 2: // req.query
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Req = &TransferRequest_Query{x}
		return true, err
	case 4: // req.state
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SyncOffset)
		err := b.DecodeMessage(msg)
		m.Req = &TransferRequest_State{msg}
		return true, err
	case 5: // req.block
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SyncBlockRange)
		err := b.DecodeMessage(msg)
		m.Req = &TransferRequest_Block{msg}
		return true, err
	case 6: // req.delta
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SyncBlockRange)
		err := b.DecodeMessage(msg)
		m.Req = &TransferRequest_Delta{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TransferRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TransferRequest)
	// req
	switch x := m.Req.(type) {
	case *TransferRequest_Index:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Index))
	case *TransferRequest_Query:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Query))
	case *TransferRequest_State:
		s := proto.Size(x.State)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TransferRequest_Block:
		s := proto.Size(x.Block)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TransferRequest_Delta:
		s := proto.Size(x.Delta)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

//the response contain one of the payload and client should know
//which field it should check, its seq field is which transferAck can ack for,
//(notice seq is 32bit so there will be an implicit constration that a
//no more than 4G messages can be transferred in one session)
//it must be unique for each response message
//and incremental during a whole session
type TransferResponse struct {
	//both index and query should use this field
	Index *StateIndex      `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	State *SyncStateChunk  `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Block *SyncBlock       `protobuf:"bytes,5,opt,name=block,proto3" json:"block,omitempty"`
	Delta *SyncStateDeltas `protobuf:"bytes,6,opt,name=delta,proto3" json:"delta,omitempty"`
	//please notice seq is used for nothing than congest controlling
	//for example, server can consider the session is finished after
	//the last message is sent without waiting for client's acking
	Seq                  uint32   `protobuf:"varint,20,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferResponse) Reset()         { *m = TransferResponse{} }
func (m *TransferResponse) String() string { return proto.CompactTextString(m) }
func (*TransferResponse) ProtoMessage()    {}
func (*TransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{9}
}

func (m *TransferResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferResponse.Unmarshal(m, b)
}
func (m *TransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferResponse.Marshal(b, m, deterministic)
}
func (m *TransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferResponse.Merge(m, src)
}
func (m *TransferResponse) XXX_Size() int {
	return xxx_messageInfo_TransferResponse.Size(m)
}
func (m *TransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransferResponse proto.InternalMessageInfo

func (m *TransferResponse) GetIndex() *StateIndex {
	if m != nil {
		return m.Index
	}
	return nil
}

func (m *TransferResponse) GetState() *SyncStateChunk {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *TransferResponse) GetBlock() *SyncBlock {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *TransferResponse) GetDelta() *SyncStateDeltas {
	if m != nil {
		return m.Delta
	}
	return nil
}

func (m *TransferResponse) GetSeq() uint32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

// StateIndex is the payload in response to the index/query request
// (but the response in query may not contain corePayload field)
type StateIndex struct {
	Height               uint64   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Hash                 []byte   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	CorePayload          []byte   `protobuf:"bytes,4,opt,name=corePayload,proto3" json:"corePayload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StateIndex) Reset()         { *m = StateIndex{} }
func (m *StateIndex) String() string { return proto.CompactTextString(m) }
func (*StateIndex) ProtoMessage()    {}
func (*StateIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{10}
}

func (m *StateIndex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateIndex.Unmarshal(m, b)
}
func (m *StateIndex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateIndex.Marshal(b, m, deterministic)
}
func (m *StateIndex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateIndex.Merge(m, src)
}
func (m *StateIndex) XXX_Size() int {
	return xxx_messageInfo_StateIndex.Size(m)
}
func (m *StateIndex) XXX_DiscardUnknown() {
	xxx_messageInfo_StateIndex.DiscardUnknown(m)
}

var xxx_messageInfo_StateIndex proto.InternalMessageInfo

func (m *StateIndex) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *StateIndex) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *StateIndex) GetCorePayload() []byte {
	if m != nil {
		return m.CorePayload
	}
	return nil
}

// SyncBlockRange is the payload of block request, where
// start and end indicate the starting and ending blocks inclusively. The order
// in which blocks are returned is defined by the start and end values. For
// example, if start=3 and end=5, the order of blocks will be 3, 4, 5.
// If start=5 and end=3, the order will be 5, 4, 3.
type SyncBlockRange struct {
	//    uint64 correlationId = 1;
	Start uint64 `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	End   uint64 `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	//the hash of first block (start), if specified, server can check and
	//stop before transfer starts when the hash is found unmatched
	FirstHash            []byte   `protobuf:"bytes,5,opt,name=firstHash,proto3" json:"firstHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncBlockRange) Reset()         { *m = SyncBlockRange{} }
func (m *SyncBlockRange) String() string { return proto.CompactTextString(m) }
func (*SyncBlockRange) ProtoMessage()    {}
func (*SyncBlockRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{11}
}

func (m *SyncBlockRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncBlockRange.Unmarshal(m, b)
}
func (m *SyncBlockRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncBlockRange.Marshal(b, m, deterministic)
}
func (m *SyncBlockRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncBlockRange.Merge(m, src)
}
func (m *SyncBlockRange) XXX_Size() int {
	return xxx_messageInfo_SyncBlockRange.Size(m)
}
func (m *SyncBlockRange) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncBlockRange.DiscardUnknown(m)
}

var xxx_messageInfo_SyncBlockRange proto.InternalMessageInfo

func (m *SyncBlockRange) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *SyncBlockRange) GetEnd() uint64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *SyncBlockRange) GetFirstHash() []byte {
	if m != nil {
		return m.FirstHash
	}
	return nil
}

// SyncStateDeltas is the payload in response to the block request message.
type SyncBlock struct {
	Height               uint64   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Block                *Block   `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncBlock) Reset()         { *m = SyncBlock{} }
func (m *SyncBlock) String() string { return proto.CompactTextString(m) }
func (*SyncBlock) ProtoMessage()    {}
func (*SyncBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{12}
}

func (m *SyncBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncBlock.Unmarshal(m, b)
}
func (m *SyncBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncBlock.Marshal(b, m, deterministic)
}
func (m *SyncBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncBlock.Merge(m, src)
}
func (m *SyncBlock) XXX_Size() int {
	return xxx_messageInfo_SyncBlock.Size(m)
}
func (m *SyncBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncBlock.DiscardUnknown(m)
}

var xxx_messageInfo_SyncBlock proto.InternalMessageInfo

func (m *SyncBlock) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *SyncBlock) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

// SyncStateDeltas is the payload in response to the delta request message.
type SyncStateDeltas struct {
	Height               uint64                          `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Deltas               map[string]*ChaincodeStateDelta `protobuf:"bytes,2,rep,name=deltas,proto3" json:"deltas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *SyncStateDeltas) Reset()         { *m = SyncStateDeltas{} }
func (m *SyncStateDeltas) String() string { return proto.CompactTextString(m) }
func (*SyncStateDeltas) ProtoMessage()    {}
func (*SyncStateDeltas) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{13}
}

func (m *SyncStateDeltas) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncStateDeltas.Unmarshal(m, b)
}
func (m *SyncStateDeltas) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncStateDeltas.Marshal(b, m, deterministic)
}
func (m *SyncStateDeltas) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncStateDeltas.Merge(m, src)
}
func (m *SyncStateDeltas) XXX_Size() int {
	return xxx_messageInfo_SyncStateDeltas.Size(m)
}
func (m *SyncStateDeltas) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncStateDeltas.DiscardUnknown(m)
}

var xxx_messageInfo_SyncStateDeltas proto.InternalMessageInfo

func (m *SyncStateDeltas) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *SyncStateDeltas) GetDeltas() map[string]*ChaincodeStateDelta {
	if m != nil {
		return m.Deltas
	}
	return nil
}

// SyncStateChunk is the payload to the request of state syncing request
type SyncStateChunk struct {
	Offset *SyncOffset `protobuf:"bytes,1,opt,name=offset,proto3" json:"offset,omitempty"`
	//    bytes roothash = 2;
	MetaData             *SyncMetadata                   `protobuf:"bytes,5,opt,name=metaData,proto3" json:"metaData,omitempty"`
	ChaincodeStateDeltas map[string]*ChaincodeStateDelta `protobuf:"bytes,3,rep,name=ChaincodeStateDeltas,proto3" json:"ChaincodeStateDeltas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *SyncStateChunk) Reset()         { *m = SyncStateChunk{} }
func (m *SyncStateChunk) String() string { return proto.CompactTextString(m) }
func (*SyncStateChunk) ProtoMessage()    {}
func (*SyncStateChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{14}
}

func (m *SyncStateChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncStateChunk.Unmarshal(m, b)
}
func (m *SyncStateChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncStateChunk.Marshal(b, m, deterministic)
}
func (m *SyncStateChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncStateChunk.Merge(m, src)
}
func (m *SyncStateChunk) XXX_Size() int {
	return xxx_messageInfo_SyncStateChunk.Size(m)
}
func (m *SyncStateChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncStateChunk.DiscardUnknown(m)
}

var xxx_messageInfo_SyncStateChunk proto.InternalMessageInfo

func (m *SyncStateChunk) GetOffset() *SyncOffset {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *SyncStateChunk) GetMetaData() *SyncMetadata {
	if m != nil {
		return m.MetaData
	}
	return nil
}

func (m *SyncStateChunk) GetChaincodeStateDeltas() map[string]*ChaincodeStateDelta {
	if m != nil {
		return m.ChaincodeStateDeltas
	}
	return nil
}

type UpdatedValue struct {
	ValueWrap            *UpdatedValue_VSlice `protobuf:"bytes,1,opt,name=valueWrap,proto3" json:"valueWrap,omitempty"`
	PreviousValue        []byte               `protobuf:"bytes,2,opt,name=previousValue,proto3" json:"previousValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdatedValue) Reset()         { *m = UpdatedValue{} }
func (m *UpdatedValue) String() string { return proto.CompactTextString(m) }
func (*UpdatedValue) ProtoMessage()    {}
func (*UpdatedValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{15}
}

func (m *UpdatedValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatedValue.Unmarshal(m, b)
}
func (m *UpdatedValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatedValue.Marshal(b, m, deterministic)
}
func (m *UpdatedValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatedValue.Merge(m, src)
}
func (m *UpdatedValue) XXX_Size() int {
	return xxx_messageInfo_UpdatedValue.Size(m)
}
func (m *UpdatedValue) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatedValue.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatedValue proto.InternalMessageInfo

func (m *UpdatedValue) GetValueWrap() *UpdatedValue_VSlice {
	if m != nil {
		return m.ValueWrap
	}
	return nil
}

func (m *UpdatedValue) GetPreviousValue() []byte {
	if m != nil {
		return m.PreviousValue
	}
	return nil
}

type UpdatedValue_VSlice struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatedValue_VSlice) Reset()         { *m = UpdatedValue_VSlice{} }
func (m *UpdatedValue_VSlice) String() string { return proto.CompactTextString(m) }
func (*UpdatedValue_VSlice) ProtoMessage()    {}
func (*UpdatedValue_VSlice) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{15, 0}
}

func (m *UpdatedValue_VSlice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatedValue_VSlice.Unmarshal(m, b)
}
func (m *UpdatedValue_VSlice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatedValue_VSlice.Marshal(b, m, deterministic)
}
func (m *UpdatedValue_VSlice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatedValue_VSlice.Merge(m, src)
}
func (m *UpdatedValue_VSlice) XXX_Size() int {
	return xxx_messageInfo_UpdatedValue_VSlice.Size(m)
}
func (m *UpdatedValue_VSlice) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatedValue_VSlice.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatedValue_VSlice proto.InternalMessageInfo

func (m *UpdatedValue_VSlice) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type ChaincodeStateDelta struct {
	UpdatedKVs           map[string]*UpdatedValue `protobuf:"bytes,1,rep,name=UpdatedKVs,proto3" json:"UpdatedKVs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ChaincodeStateDelta) Reset()         { *m = ChaincodeStateDelta{} }
func (m *ChaincodeStateDelta) String() string { return proto.CompactTextString(m) }
func (*ChaincodeStateDelta) ProtoMessage()    {}
func (*ChaincodeStateDelta) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{16}
}

func (m *ChaincodeStateDelta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChaincodeStateDelta.Unmarshal(m, b)
}
func (m *ChaincodeStateDelta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChaincodeStateDelta.Marshal(b, m, deterministic)
}
func (m *ChaincodeStateDelta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChaincodeStateDelta.Merge(m, src)
}
func (m *ChaincodeStateDelta) XXX_Size() int {
	return xxx_messageInfo_ChaincodeStateDelta.Size(m)
}
func (m *ChaincodeStateDelta) XXX_DiscardUnknown() {
	xxx_messageInfo_ChaincodeStateDelta.DiscardUnknown(m)
}

var xxx_messageInfo_ChaincodeStateDelta proto.InternalMessageInfo

func (m *ChaincodeStateDelta) GetUpdatedKVs() map[string]*UpdatedValue {
	if m != nil {
		return m.UpdatedKVs
	}
	return nil
}

type BucketTreeOffset struct {
	Level                uint64   `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	BucketNum            uint64   `protobuf:"varint,2,opt,name=bucketNum,proto3" json:"bucketNum,omitempty"`
	Delta                uint64   `protobuf:"varint,3,opt,name=delta,proto3" json:"delta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BucketTreeOffset) Reset()         { *m = BucketTreeOffset{} }
func (m *BucketTreeOffset) String() string { return proto.CompactTextString(m) }
func (*BucketTreeOffset) ProtoMessage()    {}
func (*BucketTreeOffset) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{17}
}

func (m *BucketTreeOffset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketTreeOffset.Unmarshal(m, b)
}
func (m *BucketTreeOffset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketTreeOffset.Marshal(b, m, deterministic)
}
func (m *BucketTreeOffset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketTreeOffset.Merge(m, src)
}
func (m *BucketTreeOffset) XXX_Size() int {
	return xxx_messageInfo_BucketTreeOffset.Size(m)
}
func (m *BucketTreeOffset) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketTreeOffset.DiscardUnknown(m)
}

var xxx_messageInfo_BucketTreeOffset proto.InternalMessageInfo

func (m *BucketTreeOffset) GetLevel() uint64 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *BucketTreeOffset) GetBucketNum() uint64 {
	if m != nil {
		return m.BucketNum
	}
	return 0
}

func (m *BucketTreeOffset) GetDelta() uint64 {
	if m != nil {
		return m.Delta
	}
	return 0
}

type BlockOffset struct {
	StartNum             uint64   `protobuf:"varint,1,opt,name=startNum,proto3" json:"startNum,omitempty"`
	EndNum               uint64   `protobuf:"varint,2,opt,name=endNum,proto3" json:"endNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockOffset) Reset()         { *m = BlockOffset{} }
func (m *BlockOffset) String() string { return proto.CompactTextString(m) }
func (*BlockOffset) ProtoMessage()    {}
func (*BlockOffset) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{18}
}

func (m *BlockOffset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockOffset.Unmarshal(m, b)
}
func (m *BlockOffset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockOffset.Marshal(b, m, deterministic)
}
func (m *BlockOffset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockOffset.Merge(m, src)
}
func (m *BlockOffset) XXX_Size() int {
	return xxx_messageInfo_BlockOffset.Size(m)
}
func (m *BlockOffset) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockOffset.DiscardUnknown(m)
}

var xxx_messageInfo_BlockOffset proto.InternalMessageInfo

func (m *BlockOffset) GetStartNum() uint64 {
	if m != nil {
		return m.StartNum
	}
	return 0
}

func (m *BlockOffset) GetEndNum() uint64 {
	if m != nil {
		return m.EndNum
	}
	return 0
}

//we have specified field for each implement of states (buckettree, trie, etc.)
type SyncOffset struct {
	// Types that are valid to be assigned to Data:
	//	*SyncOffset_Buckettree
	Data                 isSyncOffset_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SyncOffset) Reset()         { *m = SyncOffset{} }
func (m *SyncOffset) String() string { return proto.CompactTextString(m) }
func (*SyncOffset) ProtoMessage()    {}
func (*SyncOffset) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{19}
}

func (m *SyncOffset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncOffset.Unmarshal(m, b)
}
func (m *SyncOffset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncOffset.Marshal(b, m, deterministic)
}
func (m *SyncOffset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncOffset.Merge(m, src)
}
func (m *SyncOffset) XXX_Size() int {
	return xxx_messageInfo_SyncOffset.Size(m)
}
func (m *SyncOffset) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncOffset.DiscardUnknown(m)
}

var xxx_messageInfo_SyncOffset proto.InternalMessageInfo

type isSyncOffset_Data interface {
	isSyncOffset_Data()
}

type SyncOffset_Buckettree struct {
	Buckettree *BucketTreeOffset `protobuf:"bytes,2,opt,name=buckettree,proto3,oneof"`
}

func (*SyncOffset_Buckettree) isSyncOffset_Data() {}

func (m *SyncOffset) GetData() isSyncOffset_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SyncOffset) GetBuckettree() *BucketTreeOffset {
	if x, ok := m.GetData().(*SyncOffset_Buckettree); ok {
		return x.Buckettree
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SyncOffset) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SyncOffset_OneofMarshaler, _SyncOffset_OneofUnmarshaler, _SyncOffset_OneofSizer, []interface{}{
		(*SyncOffset_Buckettree)(nil),
	}
}

func _SyncOffset_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SyncOffset)
	// data
	switch x := m.Data.(type) {
	case *SyncOffset_Buckettree:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Buckettree); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SyncOffset.Data has unexpected type %T", x)
	}
	return nil
}

func _SyncOffset_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SyncOffset)
	switch tag {
	case 2: // data.buckettree
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BucketTreeOffset)
		err := b.DecodeMessage(msg)
		m.Data = &SyncOffset_Buckettree{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SyncOffset_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SyncOffset)
	// data
	switch x := m.Data.(type) {
	case *SyncOffset_Buckettree:
		s := proto.Size(x.Buckettree)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SyncMetadata struct {
	// Types that are valid to be assigned to Data:
	//	*SyncMetadata_Buckettree
	Data                 isSyncMetadata_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SyncMetadata) Reset()         { *m = SyncMetadata{} }
func (m *SyncMetadata) String() string { return proto.CompactTextString(m) }
func (*SyncMetadata) ProtoMessage()    {}
func (*SyncMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{20}
}

func (m *SyncMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncMetadata.Unmarshal(m, b)
}
func (m *SyncMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncMetadata.Marshal(b, m, deterministic)
}
func (m *SyncMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncMetadata.Merge(m, src)
}
func (m *SyncMetadata) XXX_Size() int {
	return xxx_messageInfo_SyncMetadata.Size(m)
}
func (m *SyncMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_SyncMetadata proto.InternalMessageInfo

type isSyncMetadata_Data interface {
	isSyncMetadata_Data()
}

type SyncMetadata_Buckettree struct {
	Buckettree *BucketNodes `protobuf:"bytes,1,opt,name=buckettree,proto3,oneof"`
}

func (*SyncMetadata_Buckettree) isSyncMetadata_Data() {}

func (m *SyncMetadata) GetData() isSyncMetadata_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SyncMetadata) GetBuckettree() *BucketNodes {
	if x, ok := m.GetData().(*SyncMetadata_Buckettree); ok {
		return x.Buckettree
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SyncMetadata) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SyncMetadata_OneofMarshaler, _SyncMetadata_OneofUnmarshaler, _SyncMetadata_OneofSizer, []interface{}{
		(*SyncMetadata_Buckettree)(nil),
	}
}

func _SyncMetadata_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SyncMetadata)
	// data
	switch x := m.Data.(type) {
	case *SyncMetadata_Buckettree:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Buckettree); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SyncMetadata.Data has unexpected type %T", x)
	}
	return nil
}

func _SyncMetadata_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SyncMetadata)
	switch tag {
	case 1: // data.buckettree
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BucketNodes)
		err := b.DecodeMessage(msg)
		m.Data = &SyncMetadata_Buckettree{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SyncMetadata_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SyncMetadata)
	// data
	switch x := m.Data.(type) {
	case *SyncMetadata_Buckettree:
		s := proto.Size(x.Buckettree)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type BucketNode struct {
	Level                uint64   `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	BucketNum            uint64   `protobuf:"varint,2,opt,name=bucketNum,proto3" json:"bucketNum,omitempty"`
	CryptoHash           []byte   `protobuf:"bytes,3,opt,name=cryptoHash,proto3" json:"cryptoHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BucketNode) Reset()         { *m = BucketNode{} }
func (m *BucketNode) String() string { return proto.CompactTextString(m) }
func (*BucketNode) ProtoMessage()    {}
func (*BucketNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{21}
}

func (m *BucketNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketNode.Unmarshal(m, b)
}
func (m *BucketNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketNode.Marshal(b, m, deterministic)
}
func (m *BucketNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketNode.Merge(m, src)
}
func (m *BucketNode) XXX_Size() int {
	return xxx_messageInfo_BucketNode.Size(m)
}
func (m *BucketNode) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketNode.DiscardUnknown(m)
}

var xxx_messageInfo_BucketNode proto.InternalMessageInfo

func (m *BucketNode) GetLevel() uint64 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *BucketNode) GetBucketNum() uint64 {
	if m != nil {
		return m.BucketNum
	}
	return 0
}

func (m *BucketNode) GetCryptoHash() []byte {
	if m != nil {
		return m.CryptoHash
	}
	return nil
}

type BucketNodes struct {
	Nodes                []*BucketNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *BucketNodes) Reset()         { *m = BucketNodes{} }
func (m *BucketNodes) String() string { return proto.CompactTextString(m) }
func (*BucketNodes) ProtoMessage()    {}
func (*BucketNodes) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{22}
}

func (m *BucketNodes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketNodes.Unmarshal(m, b)
}
func (m *BucketNodes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketNodes.Marshal(b, m, deterministic)
}
func (m *BucketNodes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketNodes.Merge(m, src)
}
func (m *BucketNodes) XXX_Size() int {
	return xxx_messageInfo_BucketNodes.Size(m)
}
func (m *BucketNodes) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketNodes.DiscardUnknown(m)
}

var xxx_messageInfo_BucketNodes proto.InternalMessageInfo

func (m *BucketNodes) GetNodes() []*BucketNode {
	if m != nil {
		return m.Nodes
	}
	return nil
}

// Like chat, stateSync wrap messages used in a syncing session
type SyncMsg struct {
	Type                 SyncMsg_Type      `protobuf:"varint,1,opt,name=type,proto3,enum=protos.SyncMsg_Type" json:"type,omitempty"`
	CorrelationId        uint64            `protobuf:"varint,2,opt,name=correlationId,proto3" json:"correlationId,omitempty"`
	Request              *SyncMsg_Request  `protobuf:"bytes,4,opt,name=request,proto3" json:"request,omitempty"`
	Response             *SyncMsg_Response `protobuf:"bytes,5,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SyncMsg) Reset()         { *m = SyncMsg{} }
func (m *SyncMsg) String() string { return proto.CompactTextString(m) }
func (*SyncMsg) ProtoMessage()    {}
func (*SyncMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{23}
}

func (m *SyncMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncMsg.Unmarshal(m, b)
}
func (m *SyncMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncMsg.Marshal(b, m, deterministic)
}
func (m *SyncMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncMsg.Merge(m, src)
}
func (m *SyncMsg) XXX_Size() int {
	return xxx_messageInfo_SyncMsg.Size(m)
}
func (m *SyncMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncMsg.DiscardUnknown(m)
}

var xxx_messageInfo_SyncMsg proto.InternalMessageInfo

func (m *SyncMsg) GetType() SyncMsg_Type {
	if m != nil {
		return m.Type
	}
	return SyncMsg_UNDEFINED
}

func (m *SyncMsg) GetCorrelationId() uint64 {
	if m != nil {
		return m.CorrelationId
	}
	return 0
}

func (m *SyncMsg) GetRequest() *SyncMsg_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *SyncMsg) GetResponse() *SyncMsg_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

//we have one of the following fields specified by the type
//bytes payload = 3;
type SyncMsg_Request struct {
	Simple               *SimpleReq       `protobuf:"bytes,1,opt,name=simple,proto3" json:"simple,omitempty"`
	Handshake            *OpenSession     `protobuf:"bytes,2,opt,name=handshake,proto3" json:"handshake,omitempty"`
	Session              *TransferRequest `protobuf:"bytes,3,opt,name=session,proto3" json:"session,omitempty"`
	Ack                  uint32           `protobuf:"varint,4,opt,name=ack,proto3" json:"ack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SyncMsg_Request) Reset()         { *m = SyncMsg_Request{} }
func (m *SyncMsg_Request) String() string { return proto.CompactTextString(m) }
func (*SyncMsg_Request) ProtoMessage()    {}
func (*SyncMsg_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{23, 0}
}

func (m *SyncMsg_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncMsg_Request.Unmarshal(m, b)
}
func (m *SyncMsg_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncMsg_Request.Marshal(b, m, deterministic)
}
func (m *SyncMsg_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncMsg_Request.Merge(m, src)
}
func (m *SyncMsg_Request) XXX_Size() int {
	return xxx_messageInfo_SyncMsg_Request.Size(m)
}
func (m *SyncMsg_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncMsg_Request.DiscardUnknown(m)
}

var xxx_messageInfo_SyncMsg_Request proto.InternalMessageInfo

func (m *SyncMsg_Request) GetSimple() *SimpleReq {
	if m != nil {
		return m.Simple
	}
	return nil
}

func (m *SyncMsg_Request) GetHandshake() *OpenSession {
	if m != nil {
		return m.Handshake
	}
	return nil
}

func (m *SyncMsg_Request) GetSession() *TransferRequest {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *SyncMsg_Request) GetAck() uint32 {
	if m != nil {
		return m.Ack
	}
	return 0
}

type SyncMsg_Response struct {
	Simple               *SimpleResp       `protobuf:"bytes,1,opt,name=simple,proto3" json:"simple,omitempty"`
	Handshake            *AcceptSession    `protobuf:"bytes,2,opt,name=handshake,proto3" json:"handshake,omitempty"`
	Session              *TransferResponse `protobuf:"bytes,3,opt,name=session,proto3" json:"session,omitempty"`
	Err                  *RequestError     `protobuf:"bytes,4,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SyncMsg_Response) Reset()         { *m = SyncMsg_Response{} }
func (m *SyncMsg_Response) String() string { return proto.CompactTextString(m) }
func (*SyncMsg_Response) ProtoMessage()    {}
func (*SyncMsg_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{23, 1}
}

func (m *SyncMsg_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncMsg_Response.Unmarshal(m, b)
}
func (m *SyncMsg_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncMsg_Response.Marshal(b, m, deterministic)
}
func (m *SyncMsg_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncMsg_Response.Merge(m, src)
}
func (m *SyncMsg_Response) XXX_Size() int {
	return xxx_messageInfo_SyncMsg_Response.Size(m)
}
func (m *SyncMsg_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncMsg_Response.DiscardUnknown(m)
}

var xxx_messageInfo_SyncMsg_Response proto.InternalMessageInfo

func (m *SyncMsg_Response) GetSimple() *SimpleResp {
	if m != nil {
		return m.Simple
	}
	return nil
}

func (m *SyncMsg_Response) GetHandshake() *AcceptSession {
	if m != nil {
		return m.Handshake
	}
	return nil
}

func (m *SyncMsg_Response) GetSession() *TransferResponse {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *SyncMsg_Response) GetErr() *RequestError {
	if m != nil {
		return m.Err
	}
	return nil
}

func init() {
	proto.RegisterEnum("protos.SyncMsg_Type", SyncMsg_Type_name, SyncMsg_Type_value)
	proto.RegisterType((*SimpleReq)(nil), "protos.SimpleReq")
	proto.RegisterType((*SimpleResp)(nil), "protos.SimpleResp")
	proto.RegisterType((*LedgerState)(nil), "protos.LedgerState")
	proto.RegisterType((*TxQuery)(nil), "protos.TxQuery")
	proto.RegisterType((*OpenSession)(nil), "protos.OpenSession")
	proto.RegisterType((*AcceptSession)(nil), "protos.AcceptSession")
	proto.RegisterType((*AcceptSession_StateStatus)(nil), "protos.AcceptSession.StateStatus")
	proto.RegisterType((*TransferDetail)(nil), "protos.TransferDetail")
	proto.RegisterType((*RequestError)(nil), "protos.RequestError")
	proto.RegisterType((*TransferRequest)(nil), "protos.TransferRequest")
	proto.RegisterType((*TransferResponse)(nil), "protos.TransferResponse")
	proto.RegisterType((*StateIndex)(nil), "protos.StateIndex")
	proto.RegisterType((*SyncBlockRange)(nil), "protos.SyncBlockRange")
	proto.RegisterType((*SyncBlock)(nil), "protos.SyncBlock")
	proto.RegisterType((*SyncStateDeltas)(nil), "protos.SyncStateDeltas")
	proto.RegisterMapType((map[string]*ChaincodeStateDelta)(nil), "protos.SyncStateDeltas.DeltasEntry")
	proto.RegisterType((*SyncStateChunk)(nil), "protos.SyncStateChunk")
	proto.RegisterMapType((map[string]*ChaincodeStateDelta)(nil), "protos.SyncStateChunk.ChaincodeStateDeltasEntry")
	proto.RegisterType((*UpdatedValue)(nil), "protos.UpdatedValue")
	proto.RegisterType((*UpdatedValue_VSlice)(nil), "protos.UpdatedValue.VSlice")
	proto.RegisterType((*ChaincodeStateDelta)(nil), "protos.ChaincodeStateDelta")
	proto.RegisterMapType((map[string]*UpdatedValue)(nil), "protos.ChaincodeStateDelta.UpdatedKVsEntry")
	proto.RegisterType((*BucketTreeOffset)(nil), "protos.BucketTreeOffset")
	proto.RegisterType((*BlockOffset)(nil), "protos.BlockOffset")
	proto.RegisterType((*SyncOffset)(nil), "protos.SyncOffset")
	proto.RegisterType((*SyncMetadata)(nil), "protos.SyncMetadata")
	proto.RegisterType((*BucketNode)(nil), "protos.BucketNode")
	proto.RegisterType((*BucketNodes)(nil), "protos.BucketNodes")
	proto.RegisterType((*SyncMsg)(nil), "protos.SyncMsg")
	proto.RegisterType((*SyncMsg_Request)(nil), "protos.SyncMsg.Request")
	proto.RegisterType((*SyncMsg_Response)(nil), "protos.SyncMsg.Response")
}

func init() { proto.RegisterFile("sync.proto", fileDescriptor_5273b98214de8075) }

var fileDescriptor_5273b98214de8075 = []byte{
	// 1528 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xdd, 0x72, 0x1b, 0x35,
	0x14, 0xce, 0xfa, 0x2f, 0xf1, 0xb1, 0x9d, 0xb8, 0x6a, 0x9a, 0xba, 0x2e, 0x74, 0xd2, 0x2d, 0x53,
	0x42, 0x0a, 0x4e, 0x9b, 0x42, 0xa1, 0xe5, 0xaa, 0x49, 0xdc, 0x49, 0xa6, 0xa9, 0x13, 0xe4, 0x34,
	0x9d, 0xe9, 0x30, 0x53, 0xd6, 0xbb, 0xb2, 0xbd, 0x13, 0x7b, 0x77, 0x23, 0xc9, 0x25, 0xe6, 0x25,
	0x78, 0x11, 0xee, 0xb8, 0x60, 0x86, 0x0b, 0x6e, 0x79, 0x81, 0x5e, 0xf0, 0x0c, 0xdc, 0x73, 0xcf,
	0xe8, 0x67, 0x7f, 0xed, 0x50, 0x86, 0xe1, 0xc6, 0x96, 0x8e, 0x3e, 0x1d, 0x7d, 0xe7, 0xd3, 0x39,
	0x92, 0x16, 0x80, 0x4d, 0x3d, 0xbb, 0x15, 0x50, 0x9f, 0xfb, 0xa8, 0x24, 0xff, 0x58, 0xb3, 0xda,
	0xb7, 0x7a, 0xd4, 0xd5, 0xd6, 0xe6, 0xcd, 0x81, 0xef, 0x0f, 0x46, 0x64, 0x4b, 0xf6, 0x7a, 0x93,
	0xfe, 0x16, 0x19, 0x07, 0x7c, 0xaa, 0x06, 0xcd, 0x1e, 0x94, 0xbb, 0xee, 0x38, 0x18, 0x11, 0x4c,
	0xce, 0xd1, 0x6d, 0xc8, 0xf1, 0x8b, 0x86, 0xb1, 0x6e, 0x6c, 0x54, 0xb6, 0x57, 0x14, 0x80, 0xb5,
	0x4e, 0x2e, 0xbe, 0x99, 0x10, 0x3a, 0xdd, 0x5f, 0xc0, 0x39, 0x7e, 0x81, 0xee, 0x41, 0x91, 0x71,
	0x8b, 0x93, 0x46, 0x4e, 0xa2, 0xae, 0x86, 0xa8, 0x43, 0xe2, 0x0c, 0x08, 0xed, 0x8a, 0xa1, 0xfd,
	0x05, 0xac, 0x30, 0x3b, 0x45, 0xc8, 0x53, 0x72, 0x6e, 0x8e, 0x01, 0xc2, 0x35, 0x58, 0x10, 0x7b,
	0x30, 0xde, 0xef, 0x01, 0x6d, 0x4a, 0x46, 0x6a, 0xad, 0x46, 0xc4, 0x88, 0x5a, 0x1e, 0xb3, 0x6c,
	0xee, 0xfa, 0xde, 0xce, 0xc8, 0xb7, 0xcf, 0x14, 0xb5, 0x9d, 0x12, 0x14, 0x28, 0x61, 0x81, 0x19,
	0x40, 0x25, 0xe1, 0x0b, 0xad, 0x41, 0x69, 0x48, 0xdc, 0xc1, 0x90, 0xcb, 0x05, 0x0b, 0x58, 0xf7,
	0xd0, 0x07, 0x50, 0x1e, 0x12, 0xcb, 0x91, 0x1e, 0xe4, 0x0a, 0x55, 0x1c, 0x1b, 0xd0, 0x3d, 0x28,
	0x49, 0x06, 0xac, 0x51, 0x4c, 0xd3, 0x94, 0x4e, 0x9f, 0xb9, 0x23, 0x4e, 0x28, 0xd6, 0x10, 0xf3,
	0x43, 0x58, 0xd4, 0x2a, 0x21, 0x04, 0x05, 0x7e, 0xe1, 0x3a, 0x0d, 0x63, 0x3d, 0xbf, 0x51, 0xc6,
	0xb2, 0x6d, 0xfe, 0x61, 0x40, 0xe5, 0x28, 0x20, 0x5e, 0x97, 0x30, 0xe6, 0xfa, 0x1e, 0xda, 0x86,
	0x25, 0x2e, 0x42, 0xe8, 0x13, 0xaa, 0x45, 0x58, 0x4b, 0x85, 0xd6, 0x27, 0x74, 0x8f, 0x70, 0xcb,
	0x1d, 0xe1, 0x08, 0x87, 0x5a, 0x50, 0x3c, 0x17, 0x0b, 0x68, 0x2d, 0xd6, 0x5a, 0x6a, 0x53, 0x5b,
	0xe1, 0xa6, 0xb6, 0xda, 0x62, 0x53, 0x85, 0x70, 0x12, 0x86, 0xd6, 0xa0, 0xe8, 0x7a, 0x0e, 0xb9,
	0x68, 0xe4, 0x45, 0x64, 0xc2, 0x2e, 0xbb, 0xe8, 0x16, 0x94, 0xfb, 0x93, 0xd1, 0x48, 0xed, 0x40,
	0x41, 0x8f, 0xc5, 0x26, 0x74, 0x17, 0x6a, 0x3d, 0x21, 0x00, 0x3b, 0xa2, 0x7b, 0x64, 0xc4, 0x2d,
	0x19, 0x7e, 0x61, 0x7f, 0x01, 0xa7, 0xcd, 0x62, 0x6b, 0xfb, 0x3e, 0x35, 0xff, 0x34, 0xa0, 0xf6,
	0xd4, 0xb6, 0x49, 0xc0, 0xc3, 0xe0, 0x62, 0xe1, 0x2e, 0xdf, 0xdf, 0x50, 0xb8, 0x94, 0x12, 0xb9,
	0x7f, 0xa9, 0xc4, 0xe3, 0x30, 0x7f, 0x0a, 0x72, 0xc2, 0xed, 0x70, 0x42, 0x8a, 0x86, 0xda, 0x26,
	0xf1, 0x33, 0x61, 0x51, 0x36, 0x35, 0x1f, 0x42, 0x25, 0x61, 0x47, 0x1f, 0x41, 0x8d, 0x30, 0xee,
	0x8e, 0x2d, 0x4e, 0x9c, 0xae, 0xfb, 0x03, 0xd1, 0x09, 0x92, 0x36, 0xee, 0x2c, 0x41, 0xc9, 0x91,
	0x1c, 0xcc, 0x47, 0xb0, 0x9c, 0x66, 0x25, 0x3c, 0x8c, 0xad, 0x8b, 0x57, 0xae, 0xe7, 0xf8, 0xdf,
	0x47, 0x1e, 0x6a, 0x38, 0x6d, 0x34, 0x3b, 0x50, 0xc5, 0xe4, 0x7c, 0x42, 0x18, 0x6f, 0x53, 0xea,
	0x53, 0xb4, 0x0e, 0x15, 0x22, 0x1a, 0xca, 0x89, 0x9c, 0x53, 0xc6, 0x49, 0x93, 0xc8, 0x4d, 0xd9,
	0xdd, 0xf5, 0x1d, 0x55, 0x69, 0x05, 0x1c, 0x1b, 0xcc, 0x77, 0x06, 0xac, 0x84, 0x44, 0xb4, 0xe3,
	0x78, 0xbf, 0x0d, 0xbd, 0x5f, 0x7a, 0xbf, 0xd7, 0x92, 0x79, 0x53, 0x88, 0xf3, 0x63, 0x33, 0xad,
	0x22, 0x8a, 0xd2, 0x7b, 0xea, 0xd9, 0x47, 0xfd, 0x3e, 0x23, 0x3c, 0x2e, 0xc2, 0x16, 0x14, 0xe5,
	0xe6, 0xeb, 0x52, 0x58, 0x4b, 0x62, 0x65, 0xb5, 0x60, 0xcb, 0x1b, 0xc8, 0xa2, 0x95, 0x30, 0x81,
	0x77, 0x64, 0xee, 0x94, 0xde, 0x87, 0x77, 0xc2, 0x5c, 0x12, 0xc7, 0xc4, 0x3b, 0x03, 0xea, 0x71,
	0x58, 0x2c, 0xf0, 0x3d, 0x46, 0xd0, 0x46, 0x32, 0xae, 0x24, 0x4f, 0xc1, 0xec, 0x40, 0x8c, 0x84,
	0x91, 0x7e, 0x9a, 0x8e, 0x28, 0xb5, 0xaa, 0x44, 0xef, 0x0e, 0x27, 0xde, 0x59, 0x18, 0xd3, 0xc7,
	0xe9, 0x98, 0xae, 0xcc, 0x72, 0xd4, 0xc1, 0x7c, 0x96, 0x0e, 0xe6, 0xfa, 0x8c, 0x5b, 0x59, 0x0f,
	0x4c, 0xc7, 0x82, 0xea, 0x90, 0x67, 0xe4, 0xbc, 0xb1, 0x2a, 0xf3, 0x40, 0x34, 0xcd, 0xd7, 0x00,
	0x31, 0xd9, 0x4b, 0x4f, 0x23, 0x04, 0x85, 0xa1, 0xc5, 0x86, 0xfa, 0x20, 0x92, 0x6d, 0x91, 0x27,
	0xb6, 0x4f, 0xc9, 0xb1, 0x35, 0x1d, 0xf9, 0x96, 0xa3, 0xaa, 0x15, 0x27, 0x4d, 0xe6, 0x29, 0x2c,
	0xa7, 0x45, 0x45, 0xab, 0x52, 0x05, 0xca, 0x75, 0xd6, 0xa8, 0x8e, 0x60, 0x45, 0x3c, 0x47, 0x9e,
	0x05, 0x05, 0x2c, 0x9a, 0x22, 0xc3, 0xfa, 0x2e, 0x65, 0x7c, 0x5f, 0x2c, 0x5a, 0x54, 0xa7, 0x5f,
	0x64, 0x30, 0xf7, 0xa1, 0x1c, 0xf9, 0xbd, 0x94, 0xf2, 0x9d, 0x50, 0x42, 0x55, 0xb9, 0xb5, 0x50,
	0x99, 0xa4, 0x7c, 0xe6, 0x6f, 0x06, 0xac, 0x64, 0xa4, 0xba, 0xd4, 0xe1, 0xd7, 0xa2, 0xd2, 0x04,
	0xa2, 0x91, 0x5b, 0xcf, 0x6f, 0x54, 0xb6, 0xef, 0x5c, 0xa2, 0x75, 0x4b, 0xfd, 0xb5, 0x3d, 0x4e,
	0xa7, 0x58, 0x4f, 0x69, 0x9e, 0x42, 0x25, 0x61, 0x16, 0x11, 0x9f, 0x91, 0xa9, 0xae, 0x2d, 0xd1,
	0x44, 0x0f, 0xa0, 0xf8, 0xd6, 0x1a, 0x4d, 0xc2, 0x9b, 0xeb, 0x66, 0xe8, 0x7c, 0x77, 0x68, 0xb9,
	0x9e, 0xed, 0x3b, 0x24, 0x5e, 0x01, 0x2b, 0xe4, 0x93, 0xdc, 0x57, 0x86, 0xf9, 0x6b, 0x4e, 0x69,
	0x1c, 0xa7, 0x10, 0xda, 0x84, 0x92, 0x2f, 0x4b, 0x64, 0x26, 0x29, 0xa3, 0xe2, 0xc1, 0x1a, 0x81,
	0xee, 0xc3, 0xd2, 0x98, 0x70, 0x6b, 0xcf, 0xd2, 0x47, 0x69, 0x65, 0x7b, 0x35, 0x89, 0x7e, 0x41,
	0xb8, 0xe5, 0x58, 0xdc, 0xc2, 0x11, 0x0a, 0x39, 0xb0, 0x3a, 0x87, 0x12, 0x6b, 0xe4, 0xa5, 0x26,
	0xf7, 0xe7, 0xa7, 0xf5, 0xbc, 0x28, 0xb4, 0x40, 0x73, 0xbd, 0x35, 0x1d, 0xb8, 0x71, 0xe9, 0x94,
	0xff, 0x4f, 0xbc, 0x1f, 0x0d, 0xa8, 0xbe, 0x0c, 0x1c, 0x71, 0x96, 0x9e, 0x0a, 0x23, 0x7a, 0x0c,
	0x65, 0x39, 0xfa, 0x8a, 0x5a, 0x81, 0x56, 0x2f, 0xf2, 0x95, 0x04, 0xb6, 0x4e, 0xbb, 0x23, 0xd7,
	0x26, 0x38, 0x46, 0x8b, 0xb3, 0x36, 0xa0, 0xe4, 0xad, 0xeb, 0x4f, 0xd8, 0x69, 0x44, 0xa5, 0x8a,
	0xd3, 0xc6, 0xe6, 0x2d, 0x28, 0xa9, 0xa9, 0xa2, 0x12, 0x14, 0xce, 0x90, 0x38, 0xd5, 0x31, 0x7f,
	0x31, 0xe0, 0xea, 0x1c, 0xd2, 0xe8, 0x39, 0x80, 0x5e, 0xff, 0xf9, 0x29, 0x93, 0xb7, 0x77, 0x65,
	0xfb, 0xde, 0x3f, 0x44, 0xd9, 0x8a, 0xd1, 0x4a, 0xe6, 0xc4, 0xf4, 0x66, 0x17, 0x56, 0x32, 0xc3,
	0x73, 0x24, 0xdd, 0x4c, 0x4b, 0xba, 0x3a, 0x4f, 0x86, 0xa4, 0x96, 0xdf, 0x42, 0x7d, 0x67, 0x62,
	0x9f, 0x11, 0x7e, 0x42, 0x09, 0x51, 0x59, 0x26, 0x62, 0x1c, 0x91, 0xb7, 0x64, 0xa4, 0x0b, 0x49,
	0x75, 0x44, 0x6d, 0xf7, 0x24, 0xb2, 0x33, 0x19, 0x87, 0xb7, 0x47, 0x64, 0x10, 0x73, 0xd4, 0x81,
	0xa6, 0x4e, 0x03, 0xd5, 0x31, 0x9f, 0x42, 0x45, 0xd6, 0xad, 0x76, 0xdc, 0x84, 0x25, 0x79, 0x72,
	0x08, 0x0f, 0xca, 0x77, 0xd4, 0x17, 0xe5, 0x4b, 0x3c, 0x27, 0xf6, 0xad, 0x7b, 0xe6, 0x31, 0x40,
	0x5c, 0x00, 0xe8, 0x09, 0x80, 0x5a, 0x93, 0x53, 0x42, 0xb2, 0x2f, 0xb8, 0x6c, 0x20, 0xfb, 0x0b,
	0x38, 0x81, 0x16, 0x2f, 0x39, 0x51, 0x14, 0xe6, 0x0b, 0xa8, 0x26, 0x8b, 0x04, 0x7d, 0x91, 0xf2,
	0x99, 0x79, 0x5f, 0x28, 0x9f, 0x1d, 0xdf, 0x21, 0xec, 0x12, 0x77, 0xdf, 0x01, 0xc4, 0xa0, 0xff,
	0xa4, 0xdd, 0x2d, 0x00, 0x9b, 0x4e, 0x03, 0xee, 0xcb, 0x63, 0x53, 0x3e, 0xad, 0x70, 0xc2, 0x62,
	0x7e, 0x09, 0x95, 0x04, 0x0d, 0x71, 0x79, 0x79, 0xa2, 0xa1, 0xf3, 0x09, 0xcd, 0x52, 0xc5, 0x0a,
	0x60, 0xfe, 0x5c, 0x82, 0x45, 0x19, 0x2a, 0x1b, 0xa0, 0x0d, 0x28, 0xf0, 0x69, 0xa0, 0xe2, 0x5b,
	0xce, 0x1c, 0x17, 0x6c, 0xd0, 0x3a, 0x99, 0x06, 0x04, 0x4b, 0x84, 0x28, 0x09, 0xdb, 0xa7, 0x94,
	0x8c, 0x2c, 0xf1, 0x16, 0x3e, 0x70, 0x34, 0xe1, 0xb4, 0x11, 0x3d, 0x80, 0x45, 0xaa, 0x5e, 0x09,
	0xfa, 0x6a, 0xbc, 0x9e, 0x75, 0xa9, 0x1f, 0x11, 0x38, 0xc4, 0xa1, 0xcf, 0x61, 0x89, 0xea, 0x1b,
	0x58, 0x9f, 0x5a, 0x8d, 0xd9, 0x39, 0x6a, 0x1c, 0x47, 0xc8, 0xe6, 0x4f, 0x06, 0x2c, 0x86, 0xef,
	0x91, 0x4f, 0xa0, 0xc4, 0xe4, 0x9b, 0x5f, 0x6f, 0x53, 0x7c, 0xc1, 0x86, 0x5f, 0x1b, 0x58, 0x03,
	0xd0, 0x03, 0x28, 0x0f, 0x2d, 0xcf, 0x61, 0x43, 0xeb, 0x6c, 0xe6, 0xb3, 0x22, 0xf1, 0x6c, 0xc6,
	0x31, 0x4a, 0x84, 0xc4, 0x94, 0x55, 0x6e, 0x42, 0x22, 0xa4, 0xcc, 0xbb, 0x08, 0x87, 0x38, 0x51,
	0x80, 0x96, 0x7d, 0x26, 0x15, 0xa8, 0x61, 0xd1, 0x6c, 0xfe, 0x6e, 0xc0, 0x52, 0xf4, 0xce, 0xd8,
	0xcc, 0xf0, 0x45, 0x59, 0xbe, 0x2c, 0x88, 0x08, 0x3f, 0x9c, 0x25, 0x7c, 0x6d, 0xee, 0x2b, 0x34,
	0x49, 0x79, 0x3b, 0x4b, 0xb9, 0x31, 0x4b, 0x59, 0x2b, 0x1a, 0x71, 0xbe, 0x0b, 0x79, 0x42, 0xa9,
	0xde, 0xb5, 0x28, 0x11, 0x92, 0x6f, 0x49, 0x2c, 0x00, 0xe6, 0x5f, 0x06, 0x14, 0x44, 0x5a, 0xa0,
	0x1a, 0x94, 0x5f, 0x76, 0xf6, 0xda, 0xcf, 0x0e, 0x3a, 0xed, 0xbd, 0xfa, 0x02, 0xba, 0x02, 0xb5,
	0xdd, 0xc3, 0x83, 0x76, 0xe7, 0xe4, 0x4d, 0xf7, 0xe0, 0xc5, 0xf1, 0x61, 0xbb, 0x6e, 0xa0, 0xeb,
	0x70, 0x35, 0x34, 0xb5, 0xbb, 0xdd, 0x83, 0xa3, 0xce, 0x9b, 0xa3, 0xe3, 0x76, 0xa7, 0x9e, 0x43,
	0x08, 0x96, 0xd3, 0x03, 0xf5, 0x3c, 0x5a, 0x03, 0x94, 0x01, 0x3f, 0xdd, 0x7d, 0x5e, 0x2f, 0xa0,
	0x06, 0xac, 0x66, 0xec, 0xbb, 0x87, 0x47, 0xdd, 0x76, 0xbd, 0x88, 0xea, 0x50, 0xed, 0xb6, 0xf1,
	0x69, 0x1b, 0xbf, 0x69, 0x63, 0x7c, 0x84, 0xeb, 0x65, 0xc1, 0x41, 0x5b, 0x34, 0x07, 0x40, 0x37,
	0xe0, 0x5a, 0x68, 0x8a, 0xdc, 0xee, 0xb6, 0x8f, 0x4f, 0xea, 0x15, 0xc1, 0x22, 0x3d, 0x54, 0xaf,
	0x8a, 0xd5, 0x32, 0x70, 0xe5, 0xbb, 0xb6, 0xfd, 0x08, 0x0a, 0x22, 0x1d, 0x51, 0x0b, 0x0a, 0xf2,
	0xea, 0x5c, 0xc9, 0x24, 0x69, 0x33, 0x6b, 0x30, 0x17, 0x36, 0x8c, 0xfb, 0xc6, 0x8e, 0xf9, 0x7a,
	0x7d, 0xe0, 0xf2, 0xe1, 0xa4, 0xd7, 0xb2, 0xfd, 0xf1, 0x96, 0xd5, 0xb3, 0xc5, 0xf9, 0xbe, 0xa5,
	0x3e, 0x9a, 0xd5, 0x67, 0x32, 0xeb, 0xa9, 0x6f, 0xe9, 0x87, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff,
	0xd1, 0xfc, 0xd4, 0x47, 0x60, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SyncClient is the client API for Sync service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SyncClient interface {
	Data(ctx context.Context, opts ...grpc.CallOption) (Sync_DataClient, error)
}

type syncClient struct {
	cc *grpc.ClientConn
}

func NewSyncClient(cc *grpc.ClientConn) SyncClient {
	return &syncClient{cc}
}

func (c *syncClient) Data(ctx context.Context, opts ...grpc.CallOption) (Sync_DataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Sync_serviceDesc.Streams[0], "/protos.Sync/Data", opts...)
	if err != nil {
		return nil, err
	}
	x := &syncDataClient{stream}
	return x, nil
}

type Sync_DataClient interface {
	Send(*SyncMsg) error
	Recv() (*SyncMsg, error)
	grpc.ClientStream
}

type syncDataClient struct {
	grpc.ClientStream
}

func (x *syncDataClient) Send(m *SyncMsg) error {
	return x.ClientStream.SendMsg(m)
}

func (x *syncDataClient) Recv() (*SyncMsg, error) {
	m := new(SyncMsg)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SyncServer is the server API for Sync service.
type SyncServer interface {
	Data(Sync_DataServer) error
}

func RegisterSyncServer(s *grpc.Server, srv SyncServer) {
	s.RegisterService(&_Sync_serviceDesc, srv)
}

func _Sync_Data_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SyncServer).Data(&syncDataServer{stream})
}

type Sync_DataServer interface {
	Send(*SyncMsg) error
	Recv() (*SyncMsg, error)
	grpc.ServerStream
}

type syncDataServer struct {
	grpc.ServerStream
}

func (x *syncDataServer) Send(m *SyncMsg) error {
	return x.ServerStream.SendMsg(m)
}

func (x *syncDataServer) Recv() (*SyncMsg, error) {
	m := new(SyncMsg)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Sync_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.Sync",
	HandlerType: (*SyncServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Data",
			Handler:       _Sync_Data_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "sync.proto",
}
