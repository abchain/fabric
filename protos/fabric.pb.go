// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fabric.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Transaction_Type int32

const (
	Transaction_UNDEFINED Transaction_Type = 0
	// deploy a chaincode to the network and call `Init` function
	Transaction_CHAINCODE_DEPLOY Transaction_Type = 1
	// call a chaincode `Invoke` function as a transaction
	Transaction_CHAINCODE_INVOKE Transaction_Type = 2
	// call a chaincode `query` function
	Transaction_CHAINCODE_QUERY Transaction_Type = 3
	// terminate a chaincode; not implemented yet
	Transaction_CHAINCODE_TERMINATE Transaction_Type = 4
)

var Transaction_Type_name = map[int32]string{
	0: "UNDEFINED",
	1: "CHAINCODE_DEPLOY",
	2: "CHAINCODE_INVOKE",
	3: "CHAINCODE_QUERY",
	4: "CHAINCODE_TERMINATE",
}

var Transaction_Type_value = map[string]int32{
	"UNDEFINED":           0,
	"CHAINCODE_DEPLOY":    1,
	"CHAINCODE_INVOKE":    2,
	"CHAINCODE_QUERY":     3,
	"CHAINCODE_TERMINATE": 4,
}

func (x Transaction_Type) String() string {
	return proto.EnumName(Transaction_Type_name, int32(x))
}

func (Transaction_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{3, 0}
}

type PeerEndpoint_Type int32

const (
	PeerEndpoint_UNDEFINED     PeerEndpoint_Type = 0
	PeerEndpoint_VALIDATOR     PeerEndpoint_Type = 1
	PeerEndpoint_NON_VALIDATOR PeerEndpoint_Type = 2
)

var PeerEndpoint_Type_name = map[int32]string{
	0: "UNDEFINED",
	1: "VALIDATOR",
	2: "NON_VALIDATOR",
}

var PeerEndpoint_Type_value = map[string]int32{
	"UNDEFINED":     0,
	"VALIDATOR":     1,
	"NON_VALIDATOR": 2,
}

func (x PeerEndpoint_Type) String() string {
	return proto.EnumName(PeerEndpoint_Type_name, int32(x))
}

func (PeerEndpoint_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{12, 0}
}

type Message_Type int32

const (
	Message_UNDEFINED               Message_Type = 0
	Message_DISC_HELLO              Message_Type = 1
	Message_DISC_DISCONNECT         Message_Type = 2
	Message_DISC_GET_PEERS          Message_Type = 3
	Message_DISC_PEERS              Message_Type = 4
	Message_DISC_GET_CRED           Message_Type = 5
	Message_CHAIN_TRANSACTION       Message_Type = 6
	Message_SYNC_GET_BLOCKS         Message_Type = 11
	Message_SYNC_BLOCKS             Message_Type = 12
	Message_SYNC_BLOCK_ADDED        Message_Type = 13
	Message_SYNC_STATE_GET_SNAPSHOT Message_Type = 14
	Message_SYNC_STATE_SNAPSHOT     Message_Type = 15
	Message_SYNC_STATE_GET_DELTAS   Message_Type = 16
	Message_SYNC_STATE_DELTAS       Message_Type = 17
	Message_RESPONSE                Message_Type = 20
	Message_CONSENSUS               Message_Type = 21
)

var Message_Type_name = map[int32]string{
	0:  "UNDEFINED",
	1:  "DISC_HELLO",
	2:  "DISC_DISCONNECT",
	3:  "DISC_GET_PEERS",
	4:  "DISC_PEERS",
	5:  "DISC_GET_CRED",
	6:  "CHAIN_TRANSACTION",
	11: "SYNC_GET_BLOCKS",
	12: "SYNC_BLOCKS",
	13: "SYNC_BLOCK_ADDED",
	14: "SYNC_STATE_GET_SNAPSHOT",
	15: "SYNC_STATE_SNAPSHOT",
	16: "SYNC_STATE_GET_DELTAS",
	17: "SYNC_STATE_DELTAS",
	20: "RESPONSE",
	21: "CONSENSUS",
}

var Message_Type_value = map[string]int32{
	"UNDEFINED":               0,
	"DISC_HELLO":              1,
	"DISC_DISCONNECT":         2,
	"DISC_GET_PEERS":          3,
	"DISC_PEERS":              4,
	"DISC_GET_CRED":           5,
	"CHAIN_TRANSACTION":       6,
	"SYNC_GET_BLOCKS":         11,
	"SYNC_BLOCKS":             12,
	"SYNC_BLOCK_ADDED":        13,
	"SYNC_STATE_GET_SNAPSHOT": 14,
	"SYNC_STATE_SNAPSHOT":     15,
	"SYNC_STATE_GET_DELTAS":   16,
	"SYNC_STATE_DELTAS":       17,
	"RESPONSE":                20,
	"CONSENSUS":               21,
}

func (x Message_Type) String() string {
	return proto.EnumName(Message_Type_name, int32(x))
}

func (Message_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{16, 0}
}

type Response_StatusCode int32

const (
	Response_UNDEFINED Response_StatusCode = 0
	Response_SUCCESS   Response_StatusCode = 200
	Response_FAILURE   Response_StatusCode = 500
)

var Response_StatusCode_name = map[int32]string{
	0:   "UNDEFINED",
	200: "SUCCESS",
	500: "FAILURE",
}

var Response_StatusCode_value = map[string]int32{
	"UNDEFINED": 0,
	"SUCCESS":   200,
	"FAILURE":   500,
}

func (x Response_StatusCode) String() string {
	return proto.EnumName(Response_StatusCode_name, int32(x))
}

func (Response_StatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{17, 0}
}

// Globalstate defines the global graph of all states
type GlobalState struct {
	Count                   uint64   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	NextNodeStateHash       [][]byte `protobuf:"bytes,3,rep,name=nextNodeStateHash,proto3" json:"nextNodeStateHash,omitempty"`
	ParentNodeStateHash     [][]byte `protobuf:"bytes,4,rep,name=parentNodeStateHash,proto3" json:"parentNodeStateHash,omitempty"`
	LastBranchNodeStateHash []byte   `protobuf:"bytes,5,opt,name=lastBranchNodeStateHash,proto3" json:"lastBranchNodeStateHash,omitempty"`
	NextBranchNodeStateHash []byte   `protobuf:"bytes,7,opt,name=nextBranchNodeStateHash,proto3" json:"nextBranchNodeStateHash,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *GlobalState) Reset()         { *m = GlobalState{} }
func (m *GlobalState) String() string { return proto.CompactTextString(m) }
func (*GlobalState) ProtoMessage()    {}
func (*GlobalState) Descriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{0}
}

func (m *GlobalState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GlobalState.Unmarshal(m, b)
}
func (m *GlobalState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GlobalState.Marshal(b, m, deterministic)
}
func (m *GlobalState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalState.Merge(m, src)
}
func (m *GlobalState) XXX_Size() int {
	return xxx_messageInfo_GlobalState.Size(m)
}
func (m *GlobalState) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalState.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalState proto.InternalMessageInfo

func (m *GlobalState) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GlobalState) GetNextNodeStateHash() [][]byte {
	if m != nil {
		return m.NextNodeStateHash
	}
	return nil
}

func (m *GlobalState) GetParentNodeStateHash() [][]byte {
	if m != nil {
		return m.ParentNodeStateHash
	}
	return nil
}

func (m *GlobalState) GetLastBranchNodeStateHash() []byte {
	if m != nil {
		return m.LastBranchNodeStateHash
	}
	return nil
}

func (m *GlobalState) GetNextBranchNodeStateHash() []byte {
	if m != nil {
		return m.NextBranchNodeStateHash
	}
	return nil
}

type GlobalStateUpdateTask struct {
	Target               []byte   `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	TargetEdgeBeg        []byte   `protobuf:"bytes,2,opt,name=targetEdgeBeg,proto3" json:"targetEdgeBeg,omitempty"`
	TargetEdgeEnd        []byte   `protobuf:"bytes,3,opt,name=targetEdgeEnd,proto3" json:"targetEdgeEnd,omitempty"`
	TargetId             uint64   `protobuf:"varint,4,opt,name=targetId,proto3" json:"targetId,omitempty"`
	IsBackward           bool     `protobuf:"varint,6,opt,name=isBackward,proto3" json:"isBackward,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GlobalStateUpdateTask) Reset()         { *m = GlobalStateUpdateTask{} }
func (m *GlobalStateUpdateTask) String() string { return proto.CompactTextString(m) }
func (*GlobalStateUpdateTask) ProtoMessage()    {}
func (*GlobalStateUpdateTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{1}
}

func (m *GlobalStateUpdateTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GlobalStateUpdateTask.Unmarshal(m, b)
}
func (m *GlobalStateUpdateTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GlobalStateUpdateTask.Marshal(b, m, deterministic)
}
func (m *GlobalStateUpdateTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalStateUpdateTask.Merge(m, src)
}
func (m *GlobalStateUpdateTask) XXX_Size() int {
	return xxx_messageInfo_GlobalStateUpdateTask.Size(m)
}
func (m *GlobalStateUpdateTask) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalStateUpdateTask.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalStateUpdateTask proto.InternalMessageInfo

func (m *GlobalStateUpdateTask) GetTarget() []byte {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *GlobalStateUpdateTask) GetTargetEdgeBeg() []byte {
	if m != nil {
		return m.TargetEdgeBeg
	}
	return nil
}

func (m *GlobalStateUpdateTask) GetTargetEdgeEnd() []byte {
	if m != nil {
		return m.TargetEdgeEnd
	}
	return nil
}

func (m *GlobalStateUpdateTask) GetTargetId() uint64 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

func (m *GlobalStateUpdateTask) GetIsBackward() bool {
	if m != nil {
		return m.IsBackward
	}
	return false
}

// a simple bloom filter information for representing a
// group of state
// the filter is expressed by a bytes string less than
// 8k (65535bit) and has 8*<bytes> buckets
// a target hash is separated into WORDs (16bit) and the
// first n (n=hashCounts) WORD is used in the filter
// if the length of target has no enough WORDs, the hashes
// of rest are considered as 0
type StateFilter struct {
	Filter               []byte   `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	HashCounts           uint32   `protobuf:"varint,2,opt,name=hashCounts,proto3" json:"hashCounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StateFilter) Reset()         { *m = StateFilter{} }
func (m *StateFilter) String() string { return proto.CompactTextString(m) }
func (*StateFilter) ProtoMessage()    {}
func (*StateFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{2}
}

func (m *StateFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateFilter.Unmarshal(m, b)
}
func (m *StateFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateFilter.Marshal(b, m, deterministic)
}
func (m *StateFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateFilter.Merge(m, src)
}
func (m *StateFilter) XXX_Size() int {
	return xxx_messageInfo_StateFilter.Size(m)
}
func (m *StateFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_StateFilter.DiscardUnknown(m)
}

var xxx_messageInfo_StateFilter proto.InternalMessageInfo

func (m *StateFilter) GetFilter() []byte {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *StateFilter) GetHashCounts() uint32 {
	if m != nil {
		return m.HashCounts
	}
	return 0
}

// Transaction defines a function call to a contract.
// `args` is an array of type string so that the chaincode writer can choose
// whatever format they wish for the arguments for their chaincode.
// For example, they may wish to use JSON, XML, or a custom format.
// TODO: Defined remaining fields.
type Transaction struct {
	Type Transaction_Type `protobuf:"varint,1,opt,name=type,proto3,enum=protos.Transaction_Type" json:"type,omitempty"`
	//store ChaincodeID as bytes so its encrypted value can be stored
	ChaincodeID                    []byte               `protobuf:"bytes,2,opt,name=chaincodeID,proto3" json:"chaincodeID,omitempty"`
	Payload                        []byte               `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Metadata                       []byte               `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Txid                           string               `protobuf:"bytes,5,opt,name=txid,proto3" json:"txid,omitempty"`
	Timestamp                      *timestamp.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ConfidentialityLevel           ConfidentialityLevel `protobuf:"varint,7,opt,name=confidentialityLevel,proto3,enum=protos.ConfidentialityLevel" json:"confidentialityLevel,omitempty"`
	ConfidentialityProtocolVersion string               `protobuf:"bytes,8,opt,name=confidentialityProtocolVersion,proto3" json:"confidentialityProtocolVersion,omitempty"`
	Nonce                          []byte               `protobuf:"bytes,9,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ToValidators                   []byte               `protobuf:"bytes,10,opt,name=toValidators,proto3" json:"toValidators,omitempty"`
	Cert                           []byte               `protobuf:"bytes,11,opt,name=cert,proto3" json:"cert,omitempty"`
	Signature                      []byte               `protobuf:"bytes,12,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}             `json:"-"`
	XXX_unrecognized               []byte               `json:"-"`
	XXX_sizecache                  int32                `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{3}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetType() Transaction_Type {
	if m != nil {
		return m.Type
	}
	return Transaction_UNDEFINED
}

func (m *Transaction) GetChaincodeID() []byte {
	if m != nil {
		return m.ChaincodeID
	}
	return nil
}

func (m *Transaction) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Transaction) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Transaction) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *Transaction) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Transaction) GetConfidentialityLevel() ConfidentialityLevel {
	if m != nil {
		return m.ConfidentialityLevel
	}
	return ConfidentialityLevel_PUBLIC
}

func (m *Transaction) GetConfidentialityProtocolVersion() string {
	if m != nil {
		return m.ConfidentialityProtocolVersion
	}
	return ""
}

func (m *Transaction) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *Transaction) GetToValidators() []byte {
	if m != nil {
		return m.ToValidators
	}
	return nil
}

func (m *Transaction) GetCert() []byte {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *Transaction) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// TransactionBlock carries a batch of transactions.
type TransactionBlock struct {
	Transactions         []*Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TransactionBlock) Reset()         { *m = TransactionBlock{} }
func (m *TransactionBlock) String() string { return proto.CompactTextString(m) }
func (*TransactionBlock) ProtoMessage()    {}
func (*TransactionBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{4}
}

func (m *TransactionBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionBlock.Unmarshal(m, b)
}
func (m *TransactionBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionBlock.Marshal(b, m, deterministic)
}
func (m *TransactionBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionBlock.Merge(m, src)
}
func (m *TransactionBlock) XXX_Size() int {
	return xxx_messageInfo_TransactionBlock.Size(m)
}
func (m *TransactionBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionBlock.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionBlock proto.InternalMessageInfo

func (m *TransactionBlock) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

// TransactionResult contains the return value of a transaction. It does
// not track potential state changes that were a result of the transaction.
// txid - The unique identifier of this transaction.
// result - The return value of the transaction.
// errorCode - An error code. 5xx will be logged as a failure in the dashboard.
// error - An error string for logging an issue.
// chaincodeEvent - any event emitted by a transaction
type TransactionResult struct {
	Txid      string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Result    []byte `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	ErrorCode uint32 `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	Error     string `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	//ChaincodeEvent chaincodeEvent = 5;
	ChaincodeEvents      []*ChaincodeEvent `protobuf:"bytes,6,rep,name=chaincodeEvents,proto3" json:"chaincodeEvents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TransactionResult) Reset()         { *m = TransactionResult{} }
func (m *TransactionResult) String() string { return proto.CompactTextString(m) }
func (*TransactionResult) ProtoMessage()    {}
func (*TransactionResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{5}
}

func (m *TransactionResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionResult.Unmarshal(m, b)
}
func (m *TransactionResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionResult.Marshal(b, m, deterministic)
}
func (m *TransactionResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionResult.Merge(m, src)
}
func (m *TransactionResult) XXX_Size() int {
	return xxx_messageInfo_TransactionResult.Size(m)
}
func (m *TransactionResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionResult.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionResult proto.InternalMessageInfo

func (m *TransactionResult) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *TransactionResult) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *TransactionResult) GetErrorCode() uint32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *TransactionResult) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *TransactionResult) GetChaincodeEvents() []*ChaincodeEvent {
	if m != nil {
		return m.ChaincodeEvents
	}
	return nil
}

// Block carries The data that describes a block in the blockchain.
// version - Version used to track any protocol changes.
// timestamp - The time at which the block or transaction order
// was proposed. This may not be used by all consensus modules.
// transactions - The ordered list of transactions in the block.
// stateHash - The state hash after running transactions in this block.
// previousBlockHash - The hash of the previous block in the chain.
// consensusMetadata - Consensus modules may optionally store any
// additional metadata in this field.
// nonHashData - Data stored with the block, but not included in the blocks
// hash. This allows this data to be different per peer or discarded without
// impacting the blockchain.
type Block struct {
	Version              uint32               `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Transactions         []*Transaction       `protobuf:"bytes,3,rep,name=transactions,proto3" json:"transactions,omitempty"`
	StateHash            []byte               `protobuf:"bytes,4,opt,name=stateHash,proto3" json:"stateHash,omitempty"`
	PreviousBlockHash    []byte               `protobuf:"bytes,5,opt,name=previousBlockHash,proto3" json:"previousBlockHash,omitempty"`
	ConsensusMetadata    []byte               `protobuf:"bytes,6,opt,name=consensusMetadata,proto3" json:"consensusMetadata,omitempty"`
	NonHashData          *NonHashData         `protobuf:"bytes,7,opt,name=nonHashData,proto3" json:"nonHashData,omitempty"`
	Txids                []string             `protobuf:"bytes,8,rep,name=txids,proto3" json:"txids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{6}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Block) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Block) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *Block) GetStateHash() []byte {
	if m != nil {
		return m.StateHash
	}
	return nil
}

func (m *Block) GetPreviousBlockHash() []byte {
	if m != nil {
		return m.PreviousBlockHash
	}
	return nil
}

func (m *Block) GetConsensusMetadata() []byte {
	if m != nil {
		return m.ConsensusMetadata
	}
	return nil
}

func (m *Block) GetNonHashData() *NonHashData {
	if m != nil {
		return m.NonHashData
	}
	return nil
}

func (m *Block) GetTxids() []string {
	if m != nil {
		return m.Txids
	}
	return nil
}

// Contains information about the blockchain ledger such as height, current
// block hash, and previous block hash.
type BlockchainInfo struct {
	Height               uint64   `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	CurrentBlockHash     []byte   `protobuf:"bytes,2,opt,name=currentBlockHash,proto3" json:"currentBlockHash,omitempty"`
	PreviousBlockHash    []byte   `protobuf:"bytes,3,opt,name=previousBlockHash,proto3" json:"previousBlockHash,omitempty"`
	CurrentStateHash     []byte   `protobuf:"bytes,4,opt,name=currentStateHash,proto3" json:"currentStateHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockchainInfo) Reset()         { *m = BlockchainInfo{} }
func (m *BlockchainInfo) String() string { return proto.CompactTextString(m) }
func (*BlockchainInfo) ProtoMessage()    {}
func (*BlockchainInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{7}
}

func (m *BlockchainInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockchainInfo.Unmarshal(m, b)
}
func (m *BlockchainInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockchainInfo.Marshal(b, m, deterministic)
}
func (m *BlockchainInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockchainInfo.Merge(m, src)
}
func (m *BlockchainInfo) XXX_Size() int {
	return xxx_messageInfo_BlockchainInfo.Size(m)
}
func (m *BlockchainInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockchainInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BlockchainInfo proto.InternalMessageInfo

func (m *BlockchainInfo) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockchainInfo) GetCurrentBlockHash() []byte {
	if m != nil {
		return m.CurrentBlockHash
	}
	return nil
}

func (m *BlockchainInfo) GetPreviousBlockHash() []byte {
	if m != nil {
		return m.PreviousBlockHash
	}
	return nil
}

func (m *BlockchainInfo) GetCurrentStateHash() []byte {
	if m != nil {
		return m.CurrentStateHash
	}
	return nil
}

// NonHashData is data that is recorded on the block, but not included in
// the block hash when verifying the blockchain.
// localLedgerCommitTimestamp - The time at which the block was added
// to the ledger on the local peer.
// chaincodeEvent - is an array ChaincodeEvents, one per transaction in the
// block
type NonHashData struct {
	LocalLedgerCommitTimestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=localLedgerCommitTimestamp,proto3" json:"localLedgerCommitTimestamp,omitempty"`
	ChaincodeEvents            []*ChaincodeEvent    `protobuf:"bytes,2,rep,name=chaincodeEvents,proto3" json:"chaincodeEvents,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}             `json:"-"`
	XXX_unrecognized           []byte               `json:"-"`
	XXX_sizecache              int32                `json:"-"`
}

func (m *NonHashData) Reset()         { *m = NonHashData{} }
func (m *NonHashData) String() string { return proto.CompactTextString(m) }
func (*NonHashData) ProtoMessage()    {}
func (*NonHashData) Descriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{8}
}

func (m *NonHashData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NonHashData.Unmarshal(m, b)
}
func (m *NonHashData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NonHashData.Marshal(b, m, deterministic)
}
func (m *NonHashData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NonHashData.Merge(m, src)
}
func (m *NonHashData) XXX_Size() int {
	return xxx_messageInfo_NonHashData.Size(m)
}
func (m *NonHashData) XXX_DiscardUnknown() {
	xxx_messageInfo_NonHashData.DiscardUnknown(m)
}

var xxx_messageInfo_NonHashData proto.InternalMessageInfo

func (m *NonHashData) GetLocalLedgerCommitTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.LocalLedgerCommitTimestamp
	}
	return nil
}

func (m *NonHashData) GetChaincodeEvents() []*ChaincodeEvent {
	if m != nil {
		return m.ChaincodeEvents
	}
	return nil
}

type PeerAddress struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerAddress) Reset()         { *m = PeerAddress{} }
func (m *PeerAddress) String() string { return proto.CompactTextString(m) }
func (*PeerAddress) ProtoMessage()    {}
func (*PeerAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{9}
}

func (m *PeerAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerAddress.Unmarshal(m, b)
}
func (m *PeerAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerAddress.Marshal(b, m, deterministic)
}
func (m *PeerAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerAddress.Merge(m, src)
}
func (m *PeerAddress) XXX_Size() int {
	return xxx_messageInfo_PeerAddress.Size(m)
}
func (m *PeerAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerAddress.DiscardUnknown(m)
}

var xxx_messageInfo_PeerAddress proto.InternalMessageInfo

func (m *PeerAddress) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *PeerAddress) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type PeerID struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerID) Reset()         { *m = PeerID{} }
func (m *PeerID) String() string { return proto.CompactTextString(m) }
func (*PeerID) ProtoMessage()    {}
func (*PeerID) Descriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{10}
}

func (m *PeerID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerID.Unmarshal(m, b)
}
func (m *PeerID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerID.Marshal(b, m, deterministic)
}
func (m *PeerID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerID.Merge(m, src)
}
func (m *PeerID) XXX_Size() int {
	return xxx_messageInfo_PeerID.Size(m)
}
func (m *PeerID) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerID.DiscardUnknown(m)
}

var xxx_messageInfo_PeerID proto.InternalMessageInfo

func (m *PeerID) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

//extended peerid for connection in separated streams, company with
//the one-time password
type PeerIDOnStream struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Passw                []byte   `protobuf:"bytes,2,opt,name=passw,proto3" json:"passw,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerIDOnStream) Reset()         { *m = PeerIDOnStream{} }
func (m *PeerIDOnStream) String() string { return proto.CompactTextString(m) }
func (*PeerIDOnStream) ProtoMessage()    {}
func (*PeerIDOnStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{11}
}

func (m *PeerIDOnStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerIDOnStream.Unmarshal(m, b)
}
func (m *PeerIDOnStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerIDOnStream.Marshal(b, m, deterministic)
}
func (m *PeerIDOnStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerIDOnStream.Merge(m, src)
}
func (m *PeerIDOnStream) XXX_Size() int {
	return xxx_messageInfo_PeerIDOnStream.Size(m)
}
func (m *PeerIDOnStream) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerIDOnStream.DiscardUnknown(m)
}

var xxx_messageInfo_PeerIDOnStream proto.InternalMessageInfo

func (m *PeerIDOnStream) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PeerIDOnStream) GetPassw() []byte {
	if m != nil {
		return m.Passw
	}
	return nil
}

type PeerEndpoint struct {
	ID                   *PeerID           `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Address              string            `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Type                 PeerEndpoint_Type `protobuf:"varint,3,opt,name=type,proto3,enum=protos.PeerEndpoint_Type" json:"type,omitempty"`
	PkiID                []byte            `protobuf:"bytes,4,opt,name=pkiID,proto3" json:"pkiID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PeerEndpoint) Reset()         { *m = PeerEndpoint{} }
func (m *PeerEndpoint) String() string { return proto.CompactTextString(m) }
func (*PeerEndpoint) ProtoMessage()    {}
func (*PeerEndpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{12}
}

func (m *PeerEndpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerEndpoint.Unmarshal(m, b)
}
func (m *PeerEndpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerEndpoint.Marshal(b, m, deterministic)
}
func (m *PeerEndpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerEndpoint.Merge(m, src)
}
func (m *PeerEndpoint) XXX_Size() int {
	return xxx_messageInfo_PeerEndpoint.Size(m)
}
func (m *PeerEndpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerEndpoint.DiscardUnknown(m)
}

var xxx_messageInfo_PeerEndpoint proto.InternalMessageInfo

func (m *PeerEndpoint) GetID() *PeerID {
	if m != nil {
		return m.ID
	}
	return nil
}

func (m *PeerEndpoint) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *PeerEndpoint) GetType() PeerEndpoint_Type {
	if m != nil {
		return m.Type
	}
	return PeerEndpoint_UNDEFINED
}

func (m *PeerEndpoint) GetPkiID() []byte {
	if m != nil {
		return m.PkiID
	}
	return nil
}

type PeersMessage struct {
	Peers                []*PeerEndpoint `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PeersMessage) Reset()         { *m = PeersMessage{} }
func (m *PeersMessage) String() string { return proto.CompactTextString(m) }
func (*PeersMessage) ProtoMessage()    {}
func (*PeersMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{13}
}

func (m *PeersMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeersMessage.Unmarshal(m, b)
}
func (m *PeersMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeersMessage.Marshal(b, m, deterministic)
}
func (m *PeersMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeersMessage.Merge(m, src)
}
func (m *PeersMessage) XXX_Size() int {
	return xxx_messageInfo_PeersMessage.Size(m)
}
func (m *PeersMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PeersMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PeersMessage proto.InternalMessageInfo

func (m *PeersMessage) GetPeers() []*PeerEndpoint {
	if m != nil {
		return m.Peers
	}
	return nil
}

type PeersAddresses struct {
	Addresses            []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeersAddresses) Reset()         { *m = PeersAddresses{} }
func (m *PeersAddresses) String() string { return proto.CompactTextString(m) }
func (*PeersAddresses) ProtoMessage()    {}
func (*PeersAddresses) Descriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{14}
}

func (m *PeersAddresses) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeersAddresses.Unmarshal(m, b)
}
func (m *PeersAddresses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeersAddresses.Marshal(b, m, deterministic)
}
func (m *PeersAddresses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeersAddresses.Merge(m, src)
}
func (m *PeersAddresses) XXX_Size() int {
	return xxx_messageInfo_PeersAddresses.Size(m)
}
func (m *PeersAddresses) XXX_DiscardUnknown() {
	xxx_messageInfo_PeersAddresses.DiscardUnknown(m)
}

var xxx_messageInfo_PeersAddresses proto.InternalMessageInfo

func (m *PeersAddresses) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type HelloMessage struct {
	PeerEndpoint *PeerEndpoint `protobuf:"bytes,1,opt,name=peerEndpoint,proto3" json:"peerEndpoint,omitempty"`
	//BlockchainInfo blockchainInfo = 2;
	//this is the credential of remote peer, not ours, so the
	//receiver could not replay or rely this message for
	//mal-using
	PeerCredential       []byte   `protobuf:"bytes,3,opt,name=peerCredential,proto3" json:"peerCredential,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloMessage) Reset()         { *m = HelloMessage{} }
func (m *HelloMessage) String() string { return proto.CompactTextString(m) }
func (*HelloMessage) ProtoMessage()    {}
func (*HelloMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{15}
}

func (m *HelloMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloMessage.Unmarshal(m, b)
}
func (m *HelloMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloMessage.Marshal(b, m, deterministic)
}
func (m *HelloMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloMessage.Merge(m, src)
}
func (m *HelloMessage) XXX_Size() int {
	return xxx_messageInfo_HelloMessage.Size(m)
}
func (m *HelloMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloMessage.DiscardUnknown(m)
}

var xxx_messageInfo_HelloMessage proto.InternalMessageInfo

func (m *HelloMessage) GetPeerEndpoint() *PeerEndpoint {
	if m != nil {
		return m.PeerEndpoint
	}
	return nil
}

func (m *HelloMessage) GetPeerCredential() []byte {
	if m != nil {
		return m.PeerCredential
	}
	return nil
}

type Message struct {
	Type                 Message_Type         `protobuf:"varint,1,opt,name=type,proto3,enum=protos.Message_Type" json:"type,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Payload              []byte               `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Signature            []byte               `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{16}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetType() Message_Type {
	if m != nil {
		return m.Type
	}
	return Message_UNDEFINED
}

func (m *Message) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Message) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Message) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type Response struct {
	Status               Response_StatusCode `protobuf:"varint,1,opt,name=status,proto3,enum=protos.Response_StatusCode" json:"status,omitempty"`
	Msg                  []byte              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Height               uint64              `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_284efff686d8e9bf, []int{17}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatus() Response_StatusCode {
	if m != nil {
		return m.Status
	}
	return Response_UNDEFINED
}

func (m *Response) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *Response) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func init() {
	proto.RegisterEnum("protos.Transaction_Type", Transaction_Type_name, Transaction_Type_value)
	proto.RegisterEnum("protos.PeerEndpoint_Type", PeerEndpoint_Type_name, PeerEndpoint_Type_value)
	proto.RegisterEnum("protos.Message_Type", Message_Type_name, Message_Type_value)
	proto.RegisterEnum("protos.Response_StatusCode", Response_StatusCode_name, Response_StatusCode_value)
	proto.RegisterType((*GlobalState)(nil), "protos.GlobalState")
	proto.RegisterType((*GlobalStateUpdateTask)(nil), "protos.GlobalStateUpdateTask")
	proto.RegisterType((*StateFilter)(nil), "protos.StateFilter")
	proto.RegisterType((*Transaction)(nil), "protos.Transaction")
	proto.RegisterType((*TransactionBlock)(nil), "protos.TransactionBlock")
	proto.RegisterType((*TransactionResult)(nil), "protos.TransactionResult")
	proto.RegisterType((*Block)(nil), "protos.Block")
	proto.RegisterType((*BlockchainInfo)(nil), "protos.BlockchainInfo")
	proto.RegisterType((*NonHashData)(nil), "protos.NonHashData")
	proto.RegisterType((*PeerAddress)(nil), "protos.PeerAddress")
	proto.RegisterType((*PeerID)(nil), "protos.PeerID")
	proto.RegisterType((*PeerIDOnStream)(nil), "protos.PeerIDOnStream")
	proto.RegisterType((*PeerEndpoint)(nil), "protos.PeerEndpoint")
	proto.RegisterType((*PeersMessage)(nil), "protos.PeersMessage")
	proto.RegisterType((*PeersAddresses)(nil), "protos.PeersAddresses")
	proto.RegisterType((*HelloMessage)(nil), "protos.HelloMessage")
	proto.RegisterType((*Message)(nil), "protos.Message")
	proto.RegisterType((*Response)(nil), "protos.Response")
}

func init() { proto.RegisterFile("fabric.proto", fileDescriptor_284efff686d8e9bf) }

var fileDescriptor_284efff686d8e9bf = []byte{
	// 1485 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x57, 0x5f, 0x6b, 0xdb, 0x56,
	0x14, 0xaf, 0x6c, 0xc7, 0x89, 0x8f, 0x1d, 0x47, 0xb9, 0x49, 0x5a, 0x35, 0x2d, 0x9d, 0x11, 0x63,
	0x84, 0xd2, 0x39, 0x25, 0xa5, 0xb4, 0x14, 0x06, 0x73, 0x24, 0xa5, 0x31, 0x75, 0x65, 0x4f, 0x72,
	0x02, 0xed, 0x4b, 0xb8, 0x91, 0x6e, 0x6c, 0x11, 0x59, 0xd7, 0xe8, 0xca, 0x69, 0xf3, 0x75, 0xf6,
	0x3a, 0xd8, 0xdb, 0xd8, 0x37, 0x18, 0xdb, 0x37, 0x18, 0xec, 0x53, 0x0c, 0x06, 0x7b, 0x1d, 0xf7,
	0x5e, 0xc9, 0x96, 0x1d, 0xa7, 0x5b, 0xf7, 0x92, 0xdc, 0xf3, 0x3b, 0xe7, 0x5c, 0x9d, 0x3f, 0x3f,
	0x9d, 0x23, 0x43, 0xed, 0x02, 0x9f, 0xc7, 0x81, 0xd7, 0x1c, 0xc7, 0x34, 0xa1, 0xa8, 0x2c, 0xfe,
	0xb1, 0xdd, 0x0d, 0x6f, 0x88, 0x83, 0xc8, 0xa3, 0x3e, 0x91, 0x8a, 0xdd, 0xed, 0x29, 0x40, 0xae,
	0x48, 0x94, 0xa4, 0xe8, 0x17, 0x03, 0x4a, 0x07, 0x21, 0xd9, 0x17, 0xd2, 0xf9, 0xe4, 0x62, 0x3f,
	0x09, 0x46, 0x84, 0x25, 0x78, 0x34, 0x96, 0x06, 0xfa, 0xdf, 0x0a, 0x54, 0x5f, 0x87, 0xf4, 0x1c,
	0x87, 0x6e, 0x82, 0x13, 0x82, 0xb6, 0x61, 0xc5, 0xa3, 0x93, 0x28, 0xd1, 0x94, 0x86, 0xb2, 0x57,
	0x72, 0xa4, 0x80, 0x9e, 0xc0, 0x66, 0x44, 0x3e, 0x26, 0x36, 0xf5, 0x89, 0x30, 0x3b, 0xc6, 0x6c,
	0xa8, 0x15, 0x1b, 0xc5, 0xbd, 0x9a, 0x73, 0x53, 0x81, 0x9e, 0xc2, 0xd6, 0x18, 0xc7, 0x24, 0x5a,
	0xb0, 0x2f, 0x09, 0xfb, 0x65, 0x2a, 0xf4, 0x12, 0xee, 0x85, 0x98, 0x25, 0x87, 0x31, 0x8e, 0xbc,
	0xe1, 0xbc, 0xd7, 0x4a, 0x43, 0xd9, 0xab, 0x39, 0xb7, 0xa9, 0xb9, 0x27, 0x0f, 0x60, 0x99, 0xe7,
	0xaa, 0xf4, 0xbc, 0x45, 0xad, 0xff, 0xac, 0xc0, 0x4e, 0x2e, 0xf3, 0x93, 0xb1, 0x8f, 0x13, 0xd2,
	0xc7, 0xec, 0x12, 0xdd, 0x85, 0x72, 0x82, 0xe3, 0x01, 0x91, 0x45, 0xa8, 0x39, 0xa9, 0x84, 0xbe,
	0x84, 0x75, 0x79, 0xb2, 0xfc, 0x01, 0x39, 0x24, 0x03, 0xad, 0x20, 0xd4, 0xf3, 0xe0, 0xbc, 0x95,
	0x15, 0xf9, 0x5a, 0x71, 0xd1, 0xca, 0x8a, 0x7c, 0xb4, 0x0b, 0x6b, 0x12, 0x68, 0xfb, 0x5a, 0x49,
	0x94, 0x7a, 0x2a, 0xa3, 0x47, 0x00, 0x01, 0x3b, 0xc4, 0xde, 0xe5, 0x07, 0x1c, 0xfb, 0x5a, 0xb9,
	0xa1, 0xec, 0xad, 0x39, 0x39, 0x44, 0xb7, 0xa0, 0x2a, 0x42, 0x3e, 0x0a, 0xc2, 0x84, 0xc4, 0x3c,
	0xdc, 0x0b, 0x71, 0xca, 0xc2, 0x95, 0x12, 0xbf, 0x66, 0x88, 0xd9, 0xd0, 0xe0, 0x1d, 0x64, 0x22,
	0xd6, 0x75, 0x27, 0x87, 0xe8, 0xbf, 0x97, 0xa0, 0xda, 0x8f, 0x71, 0xc4, 0xb0, 0x97, 0x04, 0x34,
	0x42, 0x4f, 0xa0, 0x94, 0x5c, 0x8f, 0x89, 0xb8, 0xa5, 0x7e, 0xa0, 0x49, 0x82, 0xb0, 0x66, 0xce,
	0xa4, 0xd9, 0xbf, 0x1e, 0x13, 0x47, 0x58, 0xa1, 0x06, 0x54, 0xa7, 0x8c, 0x6b, 0x9b, 0x69, 0x29,
	0xf2, 0x10, 0xd2, 0x60, 0x75, 0x8c, 0xaf, 0x43, 0x8a, 0xb3, 0x12, 0x64, 0x22, 0x4f, 0x7e, 0x44,
	0x12, 0xec, 0xe3, 0x04, 0x8b, 0xe4, 0x6b, 0xce, 0x54, 0x46, 0x08, 0x4a, 0xc9, 0xc7, 0xc0, 0x17,
	0x7d, 0xaf, 0x38, 0xe2, 0x8c, 0x5e, 0x42, 0x65, 0xca, 0x5b, 0x51, 0x8f, 0xea, 0xc1, 0x6e, 0x53,
	0x32, 0xbb, 0x99, 0x31, 0xbb, 0xd9, 0xcf, 0x2c, 0x9c, 0x99, 0x31, 0xea, 0xc1, 0xb6, 0x47, 0xa3,
	0x8b, 0xc0, 0x27, 0x51, 0x12, 0xe0, 0x30, 0x48, 0xae, 0x3b, 0xe4, 0x8a, 0x84, 0x82, 0x1b, 0xf5,
	0x83, 0x87, 0x59, 0x8e, 0xc6, 0x12, 0x1b, 0x67, 0xa9, 0x27, 0x3a, 0x82, 0x47, 0x0b, 0x78, 0x8f,
	0xdf, 0xe1, 0xd1, 0xf0, 0x94, 0xc4, 0x2c, 0xa0, 0x91, 0xb6, 0x26, 0x22, 0xff, 0x17, 0x2b, 0xfe,
	0xa2, 0x45, 0x34, 0xf2, 0x88, 0x56, 0x11, 0x05, 0x90, 0x02, 0xd2, 0xa1, 0x96, 0xd0, 0x53, 0x1c,
	0x06, 0x3e, 0x4e, 0x68, 0xcc, 0x34, 0x10, 0xca, 0x39, 0x8c, 0x57, 0xc8, 0x23, 0x71, 0xa2, 0x55,
	0x85, 0x4e, 0x9c, 0xd1, 0x43, 0xa8, 0xb0, 0x60, 0x10, 0xe1, 0x64, 0x12, 0x13, 0xad, 0x26, 0x14,
	0x33, 0x40, 0xa7, 0x50, 0xe2, 0x9d, 0x43, 0xeb, 0x50, 0x39, 0xb1, 0x4d, 0xeb, 0xa8, 0x6d, 0x5b,
	0xa6, 0x7a, 0x07, 0x6d, 0x83, 0x6a, 0x1c, 0xb7, 0xda, 0xb6, 0xd1, 0x35, 0xad, 0x33, 0xd3, 0xea,
	0x75, 0xba, 0xef, 0x54, 0x65, 0x1e, 0x6d, 0xdb, 0xa7, 0xdd, 0x37, 0x96, 0x5a, 0x40, 0x5b, 0xb0,
	0x31, 0x43, 0xbf, 0x3b, 0xb1, 0x9c, 0x77, 0x6a, 0x11, 0xdd, 0x83, 0xad, 0x19, 0xd8, 0xb7, 0x9c,
	0xb7, 0x6d, 0xbb, 0xd5, 0xb7, 0xd4, 0x92, 0xfe, 0x06, 0xd4, 0x1c, 0x6d, 0x0e, 0x43, 0xea, 0x5d,
	0xa2, 0x17, 0x50, 0x4b, 0x66, 0x18, 0xd3, 0x94, 0x46, 0x71, 0xaf, 0x7a, 0xb0, 0xb5, 0x84, 0x66,
	0xce, 0x9c, 0xa1, 0xfe, 0x93, 0x02, 0x9b, 0x79, 0x2d, 0x61, 0x93, 0x30, 0x99, 0xf2, 0x44, 0xc9,
	0xf1, 0xe4, 0x2e, 0x94, 0x63, 0xa1, 0x4d, 0xe9, 0x98, 0x4a, 0xbc, 0x3a, 0x24, 0x8e, 0x69, 0x6c,
	0x50, 0x9f, 0x08, 0x2e, 0xae, 0x3b, 0x33, 0x80, 0x77, 0x42, 0x08, 0x82, 0x8a, 0x15, 0x47, 0x0a,
	0xe8, 0x5b, 0x98, 0x8d, 0x58, 0x8b, 0x4f, 0x54, 0xa6, 0x95, 0x45, 0xc4, 0x77, 0xa7, 0xa4, 0x99,
	0x53, 0x3b, 0x8b, 0xe6, 0xfa, 0x1f, 0x05, 0x58, 0x91, 0xa9, 0x6b, 0xb0, 0x7a, 0x95, 0x92, 0x43,
	0x11, 0x4f, 0xcf, 0xc4, 0x79, 0x66, 0x17, 0x3e, 0x87, 0xd9, 0x8b, 0xe5, 0x2c, 0xfe, 0xc7, 0x72,
	0x0a, 0xaa, 0xe4, 0x66, 0xb2, 0xa4, 0xca, 0x74, 0x9e, 0x3e, 0x81, 0xcd, 0x71, 0x4c, 0xae, 0x02,
	0x3a, 0x61, 0x22, 0xf6, 0xdc, 0x0c, 0xbe, 0xa9, 0xe0, 0xd6, 0x1e, 0x8d, 0x18, 0x89, 0xd8, 0x84,
	0xbd, 0xcd, 0xde, 0xe8, 0xb2, 0xb4, 0xbe, 0xa1, 0x40, 0xcf, 0xa1, 0x1a, 0xd1, 0x88, 0x3b, 0x9a,
	0xdc, 0x6e, 0x55, 0xa4, 0x3b, 0x8d, 0xd8, 0x9e, 0xa9, 0x9c, 0xbc, 0x1d, 0xef, 0x0f, 0xef, 0x2e,
	0xd3, 0xd6, 0x1a, 0x45, 0xde, 0x1f, 0x21, 0xe8, 0x3f, 0x2a, 0x50, 0x17, 0x81, 0x88, 0xb2, 0xb7,
	0xa3, 0x0b, 0xca, 0xdb, 0x3f, 0x24, 0xc1, 0x60, 0x98, 0x2d, 0xaf, 0x54, 0x42, 0x8f, 0x41, 0xf5,
	0x26, 0x31, 0xdf, 0x3a, 0xb3, 0x94, 0x24, 0x41, 0x6e, 0xe0, 0xcb, 0xf3, 0x2f, 0xde, 0x96, 0xff,
	0xec, 0x66, 0x77, 0xa1, 0xa4, 0x37, 0x70, 0xfd, 0x07, 0x05, 0xaa, 0xb9, 0x1c, 0xd1, 0x7b, 0xd8,
	0x0d, 0xa9, 0x87, 0xc3, 0x0e, 0xf1, 0x07, 0x24, 0x36, 0xe8, 0x68, 0x14, 0x24, 0xd3, 0x4e, 0x8b,
	0x0c, 0x3e, 0xcd, 0x85, 0x4f, 0x78, 0x2f, 0x23, 0x6f, 0xe1, 0xf3, 0xc8, 0xfb, 0x1c, 0xaa, 0x3d,
	0x42, 0xe2, 0x96, 0xef, 0xc7, 0x84, 0x89, 0x99, 0x33, 0xa4, 0x2c, 0xc9, 0xde, 0x36, 0x7e, 0xe6,
	0xd8, 0x98, 0xc6, 0xf2, 0x5d, 0x5b, 0x71, 0xc4, 0x59, 0x7f, 0x08, 0x65, 0xee, 0xd6, 0x36, 0xb9,
	0x36, 0xc2, 0x23, 0x92, 0x79, 0xf0, 0xb3, 0xfe, 0x0a, 0xea, 0x52, 0xdb, 0x8d, 0xdc, 0x24, 0x26,
	0x78, 0xb4, 0xcc, 0x8a, 0xf7, 0x7b, 0x8c, 0x19, 0xfb, 0x90, 0xf6, 0x48, 0x0a, 0xfa, 0x2f, 0x0a,
	0xd4, 0xb8, 0xb3, 0x15, 0xf9, 0x63, 0x1a, 0x44, 0x09, 0x7a, 0x04, 0x85, 0xb6, 0x99, 0xd6, 0xa9,
	0x9e, 0xa5, 0x25, 0xaf, 0x77, 0x0a, 0x72, 0xfd, 0x60, 0x19, 0xbd, 0xb8, 0xa8, 0xe2, 0x64, 0x22,
	0xfa, 0x3a, 0x5d, 0x74, 0x45, 0xb1, 0x04, 0xee, 0xe7, 0x7d, 0xb3, 0xdb, 0xf3, 0x9b, 0x8e, 0xc7,
	0x73, 0x19, 0xb4, 0xcd, 0xb4, 0xb3, 0x52, 0xd0, 0x5f, 0x2c, 0x9f, 0xa9, 0xeb, 0x50, 0x39, 0x6d,
	0x75, 0xda, 0x66, 0xab, 0xdf, 0x75, 0x54, 0x05, 0x6d, 0xc2, 0xba, 0xdd, 0xb5, 0xcf, 0x66, 0x50,
	0x41, 0x7f, 0x25, 0xf3, 0x60, 0x6f, 0x09, 0x63, 0x78, 0x40, 0xd0, 0x63, 0x58, 0x19, 0x73, 0x39,
	0x1d, 0x88, 0xdb, 0xcb, 0xc2, 0x71, 0xa4, 0x89, 0xde, 0x94, 0x05, 0x64, 0x69, 0x5b, 0x88, 0x78,
	0x9b, 0x71, 0x26, 0x88, 0x1b, 0x2a, 0xce, 0x0c, 0xd0, 0xc7, 0x50, 0x3b, 0x26, 0x61, 0x48, 0xb3,
	0x67, 0xbd, 0x84, 0xda, 0x38, 0x77, 0x6d, 0x5a, 0xbd, 0xe5, 0x8f, 0x9c, 0xb3, 0x44, 0x5f, 0x41,
	0x9d, 0xcb, 0x46, 0x4c, 0xd2, 0x95, 0x96, 0xbe, 0x14, 0x0b, 0xa8, 0xfe, 0x67, 0x11, 0x56, 0xb3,
	0xa7, 0xed, 0xcd, 0x7d, 0x50, 0x4c, 0x9f, 0x92, 0xaa, 0xf3, 0x25, 0xfe, 0xff, 0x63, 0xf0, 0xf6,
	0x8f, 0x8c, 0xb9, 0x95, 0x58, 0x5a, 0x5c, 0x89, 0xbf, 0x15, 0x96, 0xf7, 0xaf, 0x0e, 0x60, 0xb6,
	0x5d, 0xe3, 0xec, 0xd8, 0xea, 0x74, 0xba, 0xaa, 0xc2, 0xf7, 0x9e, 0x90, 0xf9, 0x9f, 0xae, 0x6d,
	0x5b, 0x46, 0x5f, 0x2d, 0x20, 0x04, 0x75, 0x01, 0xbe, 0xb6, 0xfa, 0x67, 0x3d, 0xcb, 0x72, 0x5c,
	0xb5, 0x38, 0x75, 0x94, 0x72, 0x89, 0x77, 0x7e, 0x6a, 0x63, 0x38, 0x96, 0xa9, 0xae, 0xa0, 0x1d,
	0xd8, 0x14, 0xeb, 0xf2, 0xac, 0xef, 0xb4, 0x6c, 0xb7, 0x65, 0xf4, 0xdb, 0x5d, 0x5b, 0x2d, 0xf3,
	0x47, 0xb8, 0xef, 0x6c, 0x69, 0x79, 0xd8, 0xe9, 0x1a, 0x6f, 0x5c, 0xb5, 0x8a, 0x36, 0xa0, 0x2a,
	0xc0, 0x14, 0xa8, 0xf1, 0xb5, 0x3c, 0x03, 0xce, 0x5a, 0xa6, 0x69, 0x99, 0xea, 0x3a, 0x7a, 0x00,
	0xf7, 0x04, 0xea, 0xf6, 0x5b, 0x7d, 0x4b, 0xdc, 0xe0, 0xda, 0xad, 0x9e, 0x7b, 0xdc, 0xed, 0xab,
	0x75, 0xbe, 0x9e, 0x73, 0xca, 0xa9, 0x62, 0x03, 0xdd, 0x87, 0x9d, 0x05, 0x2f, 0xd3, 0xea, 0xf4,
	0x5b, 0xae, 0xaa, 0xf2, 0x18, 0x73, 0xaa, 0x14, 0xde, 0x44, 0x35, 0x58, 0x73, 0x2c, 0xb7, 0xd7,
	0xb5, 0x5d, 0x4b, 0xdd, 0xe6, 0x35, 0x33, 0xf8, 0xd1, 0x76, 0x4f, 0x5c, 0x75, 0x47, 0xff, 0x5e,
	0x81, 0x35, 0x87, 0xb0, 0x31, 0x1f, 0xf8, 0xe8, 0x19, 0x94, 0xf9, 0x36, 0x99, 0xb0, 0xb4, 0xed,
	0x0f, 0xb2, 0xb6, 0x67, 0x16, 0x4d, 0x57, 0xa8, 0xf9, 0xea, 0x75, 0x52, 0x53, 0xa4, 0x42, 0x71,
	0xc4, 0xb2, 0xef, 0x69, 0x7e, 0xcc, 0xcd, 0xf2, 0x62, 0x7e, 0x96, 0xeb, 0x2f, 0x00, 0x66, 0xfe,
	0x8b, 0xcd, 0xab, 0xc1, 0xaa, 0x7b, 0x62, 0x18, 0x96, 0xeb, 0xaa, 0xbf, 0x2a, 0x5c, 0x3a, 0x6a,
	0xb5, 0x3b, 0x27, 0x8e, 0xa5, 0xfe, 0x55, 0x3c, 0x98, 0x40, 0x89, 0xd3, 0x1b, 0x35, 0xa1, 0x64,
	0x0c, 0x71, 0x82, 0x36, 0x16, 0xe8, 0xb8, 0xbb, 0x08, 0xe8, 0x77, 0xf6, 0x94, 0xa7, 0x0a, 0xfa,
	0x06, 0x50, 0x2f, 0xa6, 0x1e, 0x61, 0x2c, 0xff, 0xad, 0xbc, 0x6c, 0xcf, 0xee, 0xaa, 0x8b, 0xa9,
	0xea, 0x77, 0x0e, 0xf5, 0xf7, 0x8d, 0x41, 0x90, 0x0c, 0x27, 0xe7, 0x4d, 0x8f, 0x8e, 0xf6, 0xf1,
	0xb9, 0x98, 0xb3, 0xfb, 0xf2, 0x27, 0x9d, 0xfc, 0x55, 0xc6, 0xce, 0xe5, 0x6f, 0xba, 0x67, 0xff,
	0x04, 0x00, 0x00, 0xff, 0xff, 0x26, 0x53, 0xf8, 0xe3, 0xea, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PeerClient is the client API for Peer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PeerClient interface {
	// Accepts a stream of Message during chat session, while receiving
	// other Message (e.g. from other peers).
	Chat(ctx context.Context, opts ...grpc.CallOption) (Peer_ChatClient, error)
	// Process a transaction from a remote source.
	ProcessTransaction(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*Response, error)
}

type peerClient struct {
	cc *grpc.ClientConn
}

func NewPeerClient(cc *grpc.ClientConn) PeerClient {
	return &peerClient{cc}
}

func (c *peerClient) Chat(ctx context.Context, opts ...grpc.CallOption) (Peer_ChatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Peer_serviceDesc.Streams[0], "/protos.Peer/Chat", opts...)
	if err != nil {
		return nil, err
	}
	x := &peerChatClient{stream}
	return x, nil
}

type Peer_ChatClient interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ClientStream
}

type peerChatClient struct {
	grpc.ClientStream
}

func (x *peerChatClient) Send(m *Message) error {
	return x.ClientStream.SendMsg(m)
}

func (x *peerChatClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *peerClient) ProcessTransaction(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/protos.Peer/ProcessTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PeerServer is the server API for Peer service.
type PeerServer interface {
	// Accepts a stream of Message during chat session, while receiving
	// other Message (e.g. from other peers).
	Chat(Peer_ChatServer) error
	// Process a transaction from a remote source.
	ProcessTransaction(context.Context, *Transaction) (*Response, error)
}

func RegisterPeerServer(s *grpc.Server, srv PeerServer) {
	s.RegisterService(&_Peer_serviceDesc, srv)
}

func _Peer_Chat_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PeerServer).Chat(&peerChatServer{stream})
}

type Peer_ChatServer interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ServerStream
}

type peerChatServer struct {
	grpc.ServerStream
}

func (x *peerChatServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func (x *peerChatServer) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Peer_ProcessTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Transaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeerServer).ProcessTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Peer/ProcessTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeerServer).ProcessTransaction(ctx, req.(*Transaction))
	}
	return interceptor(ctx, in, info, handler)
}

var _Peer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.Peer",
	HandlerType: (*PeerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProcessTransaction",
			Handler:    _Peer_ProcessTransaction_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Chat",
			Handler:       _Peer_Chat_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "fabric.proto",
}
